<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<!-- Resource dictionary entries should be defined here. -->
	
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Common.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<Style x:Key="TabItemFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle SnapsToDevicePixels="true" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="3,3,3,1" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type TabItem}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}" />
		<Setter Property="Foreground" Value="{StaticResource ButtonForeground}" />
		<Setter Property="FontFamily" Value="Verdana" />
		<Setter Property="FontSize" Value="11" />
		<Setter Property="FontWeight" Value="Normal" />
		<Setter Property="Padding" Value="11,3,11,3" />
		<Setter Property="Margin" Value="-2,0,0,0" />
		<Setter Property="BorderBrush" Value="{StaticResource TabControlBorder}" />
		<Setter Property="Background" Value="{StaticResource ButtonOuterBackground}" />
		<Setter Property="BorderThickness" Value="1,1,1,0" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<Grid SnapsToDevicePixels="true">
						<Border SnapsToDevicePixels="true" x:Name="OuterBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3,3,0,0">
							<Border SnapsToDevicePixels="true" x:Name="InnerBorder" Padding="{TemplateBinding Padding}" Background="{StaticResource  ButtonInnerBackground}" BorderBrush="{StaticResource  ButtonInnerBorder}" BorderThickness="0" CornerRadius="2,2,0,0">
								<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" x:Name="Content" VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" ContentSource="Header" RecognizesAccessKey="True" />
							</Border>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" Value="{StaticResource HoverButtonOuterBackground}" />
							<Setter Property="BorderBrush" Value="{StaticResource HoverButtonOuterBorder}" />
							<Setter Property="Background" TargetName="InnerBorder" Value="{StaticResource HoverButtonInnerBackground}" />
							<Setter Property="BorderBrush" TargetName="InnerBorder" Value="{StaticResource HoverButtonInnerBorder}" />
							<Setter Property="Foreground" Value="{StaticResource HoverButtonForeground}" />
						</Trigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Background" Value="{StaticResource SelectedTabItemOuterBackground}" />
							<Setter Property="BorderBrush" Value="{StaticResource ButtonOuterBorder}" />
							<Setter Property="Background" TargetName="InnerBorder" Value="{StaticResource SelectedTabItemInnerBackground}" />
							<Setter Property="BorderBrush" TargetName="InnerBorder" Value="{StaticResource SelectedTabItemInnerBorder}" />
							<Setter Property="Foreground" Value="{StaticResource SelectedTabItemForeground}" />
							<Setter Property="Panel.ZIndex" Value="1" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="{StaticResource DisabledButtonOuterBackground}" />
							<Setter Property="BorderBrush" Value="{StaticResource DisabledButtonOuterBorder}" />
							<Setter Property="Background" TargetName="InnerBorder" Value="{StaticResource DisabledButtonInnerBackground}" />
							<Setter Property="BorderBrush" TargetName="InnerBorder" Value="{StaticResource DisabledButtonInnerBorder}" />
							<Setter Property="Foreground" Value="{StaticResource DisabledButtonForeground}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="false" />
								<Condition Property="IsMouseOver" Value="true" />
							</MultiTrigger.Conditions>
						</MultiTrigger>
						<Trigger Property="TabStripPlacement" Value="Bottom">
							<Setter Property="BorderThickness" Value="1,0,1,1" />
							<Setter Property="CornerRadius" TargetName="OuterBorder" Value="0,0,3,3" />
							<Setter Property="CornerRadius" TargetName="InnerBorder" Value="0,0,2,2" />
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Left">
							<Setter Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="-90" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Right">
							<Setter Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="90" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true" />
								<Condition Property="TabStripPlacement" Value="Top" />
							</MultiTrigger.Conditions>
							<Setter Property="Margin" Value="-2,-2,-2,-1" />
							<Setter Property="Margin" TargetName="Content" Value="0,0,0,1" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true" />
								<Condition Property="TabStripPlacement" Value="Bottom" />
							</MultiTrigger.Conditions>
							<Setter Property="Margin" Value="-2,-1,-2,-2" />
							<Setter Property="Margin" TargetName="Content" Value="0,1,0,0" />
							<Setter Property="Background" Value="{StaticResource SelectedTabItemOuterBackgroundBottom}" />

						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true" />
								<Condition Property="TabStripPlacement" Value="Left" />
							</MultiTrigger.Conditions>
							<Setter Property="Margin" Value="-2,-2,-1,-2" />
							<Setter Property="Margin" TargetName="Content" Value="0,0,1,0" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true" />
								<Condition Property="TabStripPlacement" Value="Right" />
							</MultiTrigger.Conditions>
							<Setter Property="Margin" Value="-1,-2,-2,-2" />
							<Setter Property="Margin" TargetName="Content" Value="1,0,0,0" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


</ResourceDictionary>