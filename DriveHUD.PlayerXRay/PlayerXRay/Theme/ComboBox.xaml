<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Common.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="ToggleButton">
		<Border x:Name="OuterBorderContainer" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="3">
			<Border x:Name="InnerBorderContainer" Background="{StaticResource TextBoxInnerBackground}" BorderBrush="{StaticResource ButtonInnerBorder}" BorderThickness="1" CornerRadius="2">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition />
						<ColumnDefinition Width="20" />
					</Grid.ColumnDefinitions>

					<Border x:Name="OuterBorderArrow" Margin="-1" Grid.Column="1" Background="{StaticResource ButtonOuterBackground}" BorderBrush="{StaticResource ButtonOuterBorder}" BorderThickness="1,0,0,0" CornerRadius="0,2,2,0">
						<Border x:Name="InnerBorderArrow" Background="{StaticResource ButtonInnerBackground}" BorderBrush="{StaticResource ButtonInnerBorder}" BorderThickness="1,1,1,1" CornerRadius="0,2,2,0">
						</Border>
					</Border>

					<Path x:Name="Arrow" Grid.Column="1" Fill="{StaticResource ButtonForeground}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" />
				</Grid>
			</Border>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="ToggleButton.IsMouseOver" Value="true">
				<Setter TargetName="InnerBorderContainer" Property="Background" Value="{StaticResource HoverTextBoxInnerBackground}" />
				<Setter TargetName="InnerBorderContainer" Property="BorderBrush" Value="{StaticResource HoverButtonInnerBorder}" />
				<Setter TargetName="OuterBorderArrow" Property="Background" Value="{StaticResource HoverButtonOuterBackground}" />
				<Setter TargetName="OuterBorderArrow" Property="BorderBrush" Value="{StaticResource HoverButtonOuterBorder}" />
				<Setter TargetName="InnerBorderArrow" Property="Background" Value="{StaticResource HoverButtonInnerBackground}" />
				<Setter TargetName="InnerBorderArrow" Property="BorderBrush" Value="{StaticResource HoverButtonInnerBorder}" />
				<Setter TargetName="Arrow" Property="Fill" Value="{StaticResource HoverButtonForeground}" />
				<Setter Property="Foreground" Value="{StaticResource HoverTextBoxForeground}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter TargetName="InnerBorderContainer" Property="Background" Value="{StaticResource DisabledTextBoxInnerBackground}" />
				<Setter TargetName="InnerBorderContainer" Property="BorderBrush" Value="{StaticResource DisabledButtonInnerBorder}" />
				<Setter TargetName="OuterBorderArrow" Property="Background" Value="{StaticResource DisabledButtonOuterBackground}" />
				<Setter TargetName="OuterBorderArrow" Property="BorderBrush" Value="{StaticResource DisabledButtonOuterBorder}" />
				<Setter TargetName="InnerBorderArrow" Property="Background" Value="{StaticResource DisabledButtonInnerBackground}" />
				<Setter TargetName="InnerBorderArrow" Property="BorderBrush" Value="{StaticResource DisabledButtonInnerBorder}" />
				<Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledButtonForeground}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
		<Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
	</ControlTemplate>

	<Style x:Key="ComboBoxToggleButtonStyle" TargetType="ToggleButton">
		<Setter Property="Template" Value="{StaticResource ComboBoxToggleButtonTemplate}" />
	</Style>

	<Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
		<Setter Property="Foreground" Value="{StaticResource TextBoxForeground}" />
		<Setter Property="FontFamily" Value="Calibri" />
		<Setter Property="FontSize" Value="14" />
		<Setter Property="FontWeight" Value="Normal" />
		<Setter Property="Padding" Value="4,0,0,0" />
		<Setter Property="Margin" Value="3" />
		<Setter Property="Background" Value="{StaticResource TextBoxOuterBackground}" />
		<Setter Property="BorderBrush" Value="{StaticResource ButtonOuterBorder}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Border.CornerRadius" Value="3" />
		<Setter Property="IsSynchronizedWithCurrentItem" Value="False" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid>
						<ToggleButton Name="ToggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Style="{StaticResource ComboBoxToggleButtonStyle}" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" />

						<ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3,3,23,3" VerticalAlignment="Center" HorizontalAlignment="Left" />

						<TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="3,3,23,3" Focusable="True" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}" />
						<Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
							<Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
								<Border x:Name="DropDownBorder" Background="{StaticResource ComboBoxPopUpBackground}" BorderThickness="1,1,1,1" CornerRadius="3" BorderBrush="{StaticResource ButtonOuterBorder}" />
								<ScrollViewer Margin="0" SnapsToDevicePixels="True">
									<ItemsPresenter />
								</ScrollViewer>
							</Grid>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HasItems" Value="false">
							<Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" Value="{StaticResource HoverTextBoxOuterBackground}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource DisabledTextBoxForeground}" />
							<Setter Property="Background" Value="{StaticResource DisabledTextBoxOuterBackground}" />
							<Setter Property="BorderBrush" Value="{StaticResource DisabledButtonOuterBorder}" />
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
						</Trigger>
						<Trigger Property="IsEditable" Value="true">
							<Setter Property="IsTabStop" Value="false" />
							<Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
							<Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers></Style.Triggers>
	</Style>

	<!-- SimpleStyles: ComboBoxItem -->
	<Style x:Key="{x:Type ComboBoxItem}" TargetType="ComboBoxItem">
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="FontWeight" Value="Normal" />
		<Setter Property="FontSize" Value="14" />
		<Setter Property="FontFamily" Value="Calibri" />
		<Setter Property="Foreground" Value="{StaticResource ComboBoxItemForeground}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Margin" Value="1" />
		<Setter Property="Padding" Value="2,1,2,1" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBoxItem">
					<Border x:Name="OuterBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<Border x:Name="InnerBorder" BorderBrush="{TemplateBinding BorderBrush}" Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
							<ContentPresenter />
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsHighlighted" Value="true">
							<Setter Property="Background" Value="{StaticResource HoverButtonOuterBackground}" />
							<Setter Property="BorderBrush" Value="{StaticResource HoverButtonOuterBorder}" />
							<Setter Property="Background" TargetName="InnerBorder" Value="{StaticResource HoverButtonInnerBackground}" />
							<Setter Property="BorderBrush" TargetName="InnerBorder" Value="{StaticResource HoverButtonInnerBorder}" />
							<Setter Property="Foreground" Value="{StaticResource HoverButtonForeground}" />
						</Trigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Background" Value="{StaticResource PressedButtonOuterBackground}" />
							<Setter Property="BorderBrush" Value="{StaticResource PressedButtonOuterBorder}" />
							<Setter Property="Background" TargetName="InnerBorder" Value="{StaticResource PressedButtonInnerBackground}" />
							<Setter Property="BorderBrush" TargetName="InnerBorder" Value="{StaticResource PressedButtonInnerBorder}" />
							<Setter Property="Foreground" Value="{StaticResource PressedButtonForeground}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>