<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Theme="clr-namespace:AcePokerSolutions.NotesApp.Theme">
	<!-- Resource dictionary entries should be defined here. -->

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Common.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<Style TargetType="{x:Type TreeView}">
		<Setter Property="Background" Value="{StaticResource GroupBoxOuterBackground}" />
		<Setter Property="BorderBrush" Value="{StaticResource GroupBoxOuterBorder}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="FontWeight" Value="Normal" />
		<Setter Property="FontSize" Value="11" />
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="Padding" Value="1" />
		<Setter Property="Margin" Value="3" />
		<Setter Property="Foreground" Value="{StaticResource GroupBoxOuterBorder}" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
        
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeView}">
					<Border SnapsToDevicePixels="true" x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
						<Border SnapsToDevicePixels="true" x:Name="InnerBorder" BorderBrush="{StaticResource GroupBoxInnerBorder}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource GroupBoxInnerBorder}">
							<ScrollViewer Focusable="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" CanContentScroll="false" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
								<ItemsPresenter />
							</ScrollViewer>
						</Border>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="TreeViewItemFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z" />

	<Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Width" Value="16" />
		<Setter Property="Height" Value="16" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Width="16" Height="16" Background="Transparent" Padding="5,5,5,5">
						<Path Fill="{StaticResource ButtonForeground}" Stroke="#FF989898" x:Name="ExpandPath" Data="{StaticResource TreeArrow}">
							<Path.RenderTransform>
								<RotateTransform Angle="135" CenterX="3" CenterY="3" />
							</Path.RenderTransform>
						</Path>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Fill" TargetName="ExpandPath" Value="#ff7701" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Fill" TargetName="ExpandPath" Value="#b8bdc0" />
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="RenderTransform" TargetName="ExpandPath">
								<Setter.Value>
									<RotateTransform Angle="180" CenterX="3" CenterY="3" />
								</Setter.Value>
							</Setter>
							<Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959" />
							<Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type TreeViewItem}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Padding" Value="1,0,0,0" />
		<Setter Property="Foreground" Value="{StaticResource ButtonForeground}" />
		<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
		<Setter Property="IsExpanded" Value="True" />
        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeViewItem}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition MinWidth="19" Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="22" />
							<RowDefinition />
						</Grid.RowDefinitions>
						<ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
						<Border SnapsToDevicePixels="true" x:Name="Bd" Grid.Column="1" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" HorizontalAlignment="Stretch">
							<ContentPresenter VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Stretch" x:Name="PART_Header" ContentSource="Header" />
						</Border>
						<ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="false">
							<Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed" />
						</Trigger>
						<Trigger Property="HasItems" Value="false">
							<Setter Property="Visibility" TargetName="Expander" Value="Hidden" />
						</Trigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource PressedButtonOuterBorder}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
						</Trigger>
						<Trigger Property="Theme:TreeViewHelper.IsMouseDirectlyOverItem" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource HoverButtonInnerBackground}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true" />
								<Condition Property="IsSelectionActive" Value="false" />
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource PressedButtonOuterBorder}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
						</MultiTrigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true" />
								<Condition Property="IsSelectionActive" Value="true" />
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource PressedButtonOuterBorder}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Extra TreeView style-->
	<Style x:Key="TreeViewExtraStyle" TargetType="{x:Type TreeView}">
		<Setter Property="Background" Value="{StaticResource TreeViewExtraBackground}" />
		<Setter Property="BorderBrush" Value="{StaticResource TreeViewExtraBorder}" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeView}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
						<ScrollViewer Focusable="false" Background="{TemplateBinding Background}" CanContentScroll="false" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
							<Border Padding="{TemplateBinding Padding}">
								<ItemsPresenter />
							</Border>
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<DataTemplate x:Key="TreeViewItemExtraHeaderTemplate">
		<Border x:Name="xBorder" SnapsToDevicePixels="True" Padding="20,0,0,0" Background="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" TextBlock.Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" TextBlock.FontSize="{Binding Path=FontSize, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" TextBlock.FontFamily="{Binding Path=FontFamily, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}">
			<DockPanel>
				<Rectangle Name="xRect" SnapsToDevicePixels="True" DockPanel.Dock="Right" Margin="0,1" Width="10" Fill="{StaticResource AlternateRowBackgroundBrush}" />
				<ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,4" RecognizesAccessKey="True" Content="{Binding Path=Header, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" />
			</DockPanel>
		</Border>
		<DataTemplate.Triggers>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
					<Condition Binding="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="1" />
				</MultiDataTrigger.Conditions>
				<Setter TargetName="xRect" Property="Fill" Value="{StaticResource TreeViewItemExtraRectSelectedBackground}" />
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
				</MultiDataTrigger.Conditions>
				<Setter TargetName="xBorder" Property="Background" Value="{StaticResource TreeViewItemExtraSelectedBackground}" />
				<Setter TargetName="xBorder" Property="TextBlock.Foreground" Value="{StaticResource TreeViewItemExtraSelectedForeground}" />
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
					<Condition Binding="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="1}" />
				</MultiDataTrigger.Conditions>
				<Setter TargetName="xRect" Property="Fill" Value="{StaticResource TreeViewItemExtraRectSelectedBackground}" />
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
				</MultiDataTrigger.Conditions>
				<Setter TargetName="xBorder" Property="Background" Value="{StaticResource TreeViewItemExtraSelectedBackground}" />
				<Setter TargetName="xBorder" Property="TextBlock.Foreground" Value="{StaticResource TreeViewItemExtraSelectedForeground}" />
			</MultiDataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>

	<DataTemplate x:Key="TreeViewItemExtraHeaderExpandedTemplate">
		<Border x:Name="xBorder" SnapsToDevicePixels="True" Padding="20,0,0,0" Background="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" TextBlock.Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" TextBlock.FontSize="{Binding Path=FontSize, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" TextBlock.FontFamily="{Binding Path=FontFamily, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}">
			<DockPanel>
				<Ellipse Name="xEllipse" DockPanel.Dock="Right" Width="12" Height="12" Margin="0,0,10,0" VerticalAlignment="Center" Stroke="{StaticResource TreeViewItemExtraCircleBorderBrush}" Fill="{StaticResource TreeViewItemExtraCircleBackground}" />
				<ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,4" RecognizesAccessKey="True" Content="{Binding Path=Header, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" />
			</DockPanel>
		</Border>
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding Path=IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True">
				<Setter TargetName="xEllipse" Property="Fill" Value="{StaticResource TreeViewItemExtraCircleSelectedBackground}" />
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>

	<Style x:Key="TreeViewItemExtraStyle" TargetType="{x:Type TreeViewItem}">
		<Setter Property="Background" Value="{StaticResource TreeViewItemExtraBackground}" />
		<Setter Property="Foreground" Value="{StaticResource TreeViewItemExtraForeground}" />
		<Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="FontWeight" Value="Normal" />
		<Setter Property="FontSize" Value="13" />
		<Setter Property="FontFamily" Value="Calibri" />
		<Setter Property="Margin" Value="0,0,2,0" />
		<Setter Property="MinWidth" Value="135" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeViewItem}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition />
						</Grid.RowDefinitions>

						<Border SnapsToDevicePixels="true" x:Name="xBd" Grid.Column="1" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="Stretch" TextBlock.Foreground="{TemplateBinding Foreground}">
							<Border>
								<ContentPresenter x:Name="PART_Header" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Stretch" ContentTemplate="{StaticResource TreeViewItemExtraHeaderTemplate}" ContentSource="Header" />
							</Border>
						</Border>
						<ItemsPresenter Name="xItemsHost" Grid.Row="1" Visibility="Collapsed" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HasItems" Value="True">
							<Setter TargetName="PART_Header" Property="ContentTemplate" Value="{StaticResource TreeViewItemExtraHeaderExpandedTemplate}" />
							<Setter TargetName="xBd" Property="Background" Value="{StaticResource GroupBoxHeaderOuterBackground}" />
							<Setter TargetName="xBd" Property="TextBlock.Foreground" Value="{StaticResource TreeViewItemExtraExpandedForeground}" />
							<Setter TargetName="xBd" Property="Margin" Value="0" />
						</Trigger>
						<Trigger Property="IsExpanded" Value="True">
							<Setter TargetName="xItemsHost" Property="Visibility" Value="Visible" />
						</Trigger>
						<!--<EventTrigger RoutedEvent="TreeViewItem.Expanded">
							<BeginStoryboard>
								<Storyboard>
									<DoubleAnimation
										Duration="00:00:01"
										From="0.0"
										Storyboard.TargetName="xItemsHost"
										Storyboard.TargetProperty="Height"
										/>
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
						<EventTrigger RoutedEvent="TreeViewItem.Collapsed">
							<BeginStoryboard>
								<Storyboard>
									<DoubleAnimation
										Duration="00:00:01"
										To="0.0"
										Storyboard.TargetName="xItemsHost"
										Storyboard.TargetProperty="Height"
										/>
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>-->
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>