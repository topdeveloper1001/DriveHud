<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ctl="clr-namespace:DriveHUD.PlayerXRay.Controls"
    xmlns:cnv="clr-namespace:DriveHUD.PlayerXRay.Converters"
    xmlns:dh="http://www.acepokersolutions.com/winfx/2015/xaml/presentation"
    xmlns:local="clr-namespace:DriveHUD.PlayerXRay"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">

    <!-- Colors -->
    <Color
        x:Key="WindowBackgroundColor">#111214</Color>
    <Color
        x:Key="MenuBackgroundColor">#181a1d</Color>
    <Color
        x:Key="SelectionBackgroundColor">#33519b</Color>
    <Color
        x:Key="OuterGlowDarkColor">#0c0d0e</Color>
    <Color
        x:Key="BorderColor">#343538</Color>
    <Color
        x:Key="DarkBorderColor">#333437</Color>
    <Color
        x:Key="PanelBackgroundColor">#1f2124</Color>
    <Color
        x:Key="ForegroundColor">#ffffff</Color>
    <Color
        x:Key="GrayedTextColor">#76787d</Color>
    <Color
        x:Key="DropShadowColor">#444444</Color>

    <!-- Brushes -->
    <SolidColorBrush
        x:Key="WindowBackgroundBrush"
        Color="{StaticResource WindowBackgroundColor}" />
    <SolidColorBrush
        x:Key="MenuBackgroundBrush"
        Color="{StaticResource MenuBackgroundColor}" />
    <SolidColorBrush
        x:Key="SelectionBackgroundBrush"
        Color="{StaticResource SelectionBackgroundColor}" />
    <SolidColorBrush
        x:Key="BorderBrush"
        Color="{StaticResource BorderColor}" />
    <SolidColorBrush
        x:Key="DarkBorderBrush"
        Color="{StaticResource DarkBorderColor}" />
    <SolidColorBrush
        x:Key="PanelBackgroundBrush"
        Color="{StaticResource PanelBackgroundColor}" />
    <SolidColorBrush
        x:Key="ForegroundBrush"
        Color="{StaticResource ForegroundColor}" />
    <SolidColorBrush
        x:Key="GrayedTextBrush"
        Color="{StaticResource GrayedTextColor}" />
    <SolidColorBrush
        x:Key="DropShadowBrush"
        Color="{StaticResource DropShadowColor}" />
    <SolidColorBrush
        x:Key="LightBlueBrush"
        Color="#456dd1" />

    <LinearGradientBrush
        x:Key="OuterGlowDarkBrush"
        EndPoint="0.5,1"
        StartPoint="0.5,0">
        <GradientStop
            Color="{StaticResource WindowBackgroundColor}"
            Offset="1" />
        <GradientStop
            Color="{StaticResource OuterGlowDarkColor}" />
    </LinearGradientBrush>

    <Style
        x:Key="BaseFontStyle"
        TargetType="{x:Type Control}">
        <Setter
            Property="FontFamily"
            Value="/Fonts/#Roboto Regular" />
        <Setter
            Property="Foreground"
            Value="{StaticResource ForegroundBrush}" />
        <Setter
            Property="FontSize"
            Value="12" />
    </Style>

    <Style
        TargetType="{x:Type TextBlock}">
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
    </Style>

    <Style
        TargetType="{x:Type TextBox}">
        <Setter
            Property="FontFamily"
            Value="/Fonts/#Roboto Regular" />
        <Setter
            Property="Foreground"
            Value="{StaticResource ForegroundBrush}" />
        <Setter
            Property="FontSize"
            Value="14" />
        <Setter
            Property="Padding"
            Value="2" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource BorderBrush}" />
        <Setter
            Property="Background"
            Value="{StaticResource WindowBackgroundBrush}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type TextBox}">
                    <Border
                        x:Name="border"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Focusable="false"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="MenuButtonStyle"
        TargetType="{x:Type ctl:MenuButton}">

        <Setter
            Property="SnapsToDevicePixels"
            Value="true" />

        <Setter
            Property="BorderBrush"
            Value="{StaticResource SelectionBackgroundBrush}" />

        <Setter
            Property="Foreground"
            Value="{StaticResource ForegroundBrush}" />

        <Setter
            Property="Cursor"
            Value="Hand" />

        <Setter
            Property="Margin"
            Value="0,0,31,0" />

        <Setter
            Property="VerticalAlignment"
            Value="Top" />

        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ctl:MenuButton}">

                    <Border
                        x:Name="MenuButton_Border"
                        Width="{TemplateBinding Width}"
                        TextBlock.Foreground="{TemplateBinding Foreground}"
                        Opacity="0.5"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="0,0,0,4">

                        <StackPanel
                            HorizontalAlignment="Center"
                            Orientation="Horizontal">

                            <Image
                                x:Name="MenuButton_Icon"
                                Width="{TemplateBinding ImageWidth}"
                                Height="{TemplateBinding ImageHeight}"
                                Stretch="Fill"
                                VerticalAlignment="Center"
                                Visibility="{Binding ImageSource, Converter={dh:NullToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                                Source="{TemplateBinding ImageSource}" />

                            <ContentPresenter
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True">
                                <ContentPresenter.Style>
                                    <Style
                                        TargetType="{x:Type ContentPresenter}">
                                        <Style.Triggers>
                                            <DataTrigger
                                                Binding="{Binding ImageSource, Converter={dh:NullToBoolConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                                                Value="False">
                                                <Setter
                                                    Property="Margin"
                                                    Value="0" />
                                            </DataTrigger>
                                            <DataTrigger
                                                Binding="{Binding ImageSource, Converter={dh:NullToBoolConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                                                Value="True">
                                                <Setter
                                                    Property="Margin"
                                                    Value="9,0,0,0" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentPresenter.Style>
                            </ContentPresenter>

                        </StackPanel>

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger
                            Property="IsChecked"
                            Value="True">

                            <Setter
                                TargetName="MenuButton_Border"
                                Property="BorderBrush"
                                Value="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />

                            <Setter
                                TargetName="MenuButton_Border"
                                Property="Opacity"
                                Value="1" />

                        </Trigger>

                        <Trigger
                            Property="IsMouseOver"
                            Value="True">

                            <Setter
                                TargetName="MenuButton_Border"
                                Property="BorderBrush"
                                Value="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />

                            <Setter
                                TargetName="MenuButton_Border"
                                Property="Opacity"
                                Value="1" />

                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style
        x:Key="BottomTextStyle"
        TargetType="{x:Type TextBlock}"
        BasedOn="{StaticResource {x:Type TextBlock}}">

        <Setter
            Property="Foreground"
            Value="{StaticResource GrayedTextBrush}" />

        <Setter
            Property="Margin"
            Value="0,0,12,0" />

    </Style>

    <Style
        x:Key="BottomActiveTextStyle"
        TargetType="{x:Type TextBlock}"
        BasedOn="{StaticResource {x:Type TextBlock}}">

        <Setter
            Property="Margin"
            Value="0,0,20,0" />

    </Style>

    <Style
        x:Key="RadioButtonNormalStyle"
        TargetType="{x:Type ctl:ResizableRadioButton}">

        <Setter
            Property="Foreground"
            Value="{StaticResource ForegroundBrush}" />

        <Setter
            Property="FontFamily"
            Value="/Fonts/#Roboto Regular" />

        <Setter
            Property="FontSize"
            Value="12" />

        <Setter
            Property="OuterDiameter"
            Value="20" />

        <Setter
            Property="InnerDiameter"
            Value="8" />

        <Setter
            Property="Cursor"
            Value="Hand" />

        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ctl:ResizableRadioButton}">

                    <Border
                        x:Name="MainBody"
                        Background="Transparent"
                        Height="{TemplateBinding Height}">

                        <DockPanel>
                            <Grid
                                Width="{TemplateBinding OuterDiameter}"
                                Height="{TemplateBinding OuterDiameter}"
                                DockPanel.Dock="Left"
                                HorizontalAlignment="Left"
                                Margin="0,0,10,0">

                                <Ellipse
                                    x:Name="OuterEllipse"
                                    Width="{TemplateBinding OuterDiameter}"
                                    Height="{TemplateBinding OuterDiameter}"
                                    Fill="{StaticResource WindowBackgroundBrush}"
                                    Stroke="{StaticResource DarkBorderBrush}"
                                    StrokeThickness="1"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center" />

                                <Ellipse
                                    x:Name="InnerEllipse"
                                    Width="{TemplateBinding InnerDiameter}"
                                    Height="{TemplateBinding InnerDiameter}"
                                    Fill="{StaticResource SelectionBackgroundBrush}"
                                    Visibility="Collapsed"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center" />
                            </Grid>

                            <ContentPresenter
                                x:Name="MainContent"
                                DockPanel.Dock="Right"
                                TextBlock.FontSize="{TemplateBinding FontSize}"
                                TextBlock.Foreground="{TemplateBinding Foreground}"
                                VerticalAlignment="Center" />

                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsMouseOver"
                            Value="True">
                            <Setter
                                TargetName="InnerEllipse"
                                Property="Visibility"
                                Value="Visible" />
                        </Trigger>
                        <Trigger
                            Property="IsChecked"
                            Value="true">
                            <Setter
                                TargetName="InnerEllipse"
                                Property="Visibility"
                                Value="Visible" />
                        </Trigger>
                        <Trigger
                            Property="IsEnabled"
                            Value="false">
                            <Setter
                                TargetName="MainContent"
                                Property="TextBlock.Foreground"
                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter
                                TargetName="InnerEllipse"
                                Property="Fill"
                                Value="{DynamicResource DarkBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style
        TargetType="{x:Type Button}">
        <Setter
            Property="Cursor"
            Value="Hand" />
        <Setter
            Property="SnapsToDevicePixels"
            Value="true" />
        <Setter
            Property="OverridesDefaultStyle"
            Value="true" />
        <Setter
            Property="Foreground"
            Value="{StaticResource ForegroundBrush}" />
        <Setter
            Property="FontSize"
            Value="12" />
        <Setter
            Property="FontFamily"
            Value="/Fonts/#Roboto Regular" />
        <Setter
            Property="Background"
            Value="{StaticResource SelectionBackgroundBrush}" />
        <Setter
            Property="BorderThickness"
            Value="0" />
        <Setter
            Property="Padding"
            Value="2" />
        <Setter
            Property="FocusVisualStyle"
            Value="{DynamicResource ButtonFocusVisual}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Button}">
                    <Border
                        x:Name="Border"
                        TextBlock.Foreground="{TemplateBinding Foreground}"
                        Padding="{TemplateBinding Padding}"
                        CornerRadius="2"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Background="{TemplateBinding Background}">
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsEnabled"
                            Value="False">
                            <Setter
                                TargetName="Border"
                                Property="Opacity"
                                Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="SimpleImageButtonStyle"
        TargetType="{x:Type Button}"
        BasedOn="{StaticResource {x:Type Button}}">

        <Setter
            Property="Background"
            Value="Transparent" />

        <Setter
            Property="Padding"
            Value="0" />

    </Style>

    <Style
        x:Key="ButtonFocusVisual">
        <Setter
            Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle
                            Margin="2"
                            StrokeThickness="1"
                            Stroke="#60000000"
                            StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        TargetType="{x:Type ProgressBar}">
        <Setter
            Property="Foreground"
            Value="{StaticResource SelectionBackgroundBrush}" />
        <Setter
            Property="Background"
            Value="{StaticResource MenuBackgroundBrush}" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource BorderBrush}" />
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ProgressBar}">
                    <Grid
                        x:Name="TemplateRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup
                                x:Name="CommonStates">
                                <VisualState
                                    x:Name="Determinate" />
                                <VisualState
                                    x:Name="Indeterminate">
                                    <Storyboard
                                        RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                            Storyboard.TargetName="Animation">
                                            <EasingDoubleKeyFrame
                                                KeyTime="0"
                                                Value="0.25" />
                                            <EasingDoubleKeyFrame
                                                KeyTime="0:0:1"
                                                Value="0.25" />
                                            <EasingDoubleKeyFrame
                                                KeyTime="0:0:2"
                                                Value="0.25" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)"
                                            Storyboard.TargetName="Animation">
                                            <EasingPointKeyFrame
                                                KeyTime="0"
                                                Value="-0.5,0.5" />
                                            <EasingPointKeyFrame
                                                KeyTime="0:0:1"
                                                Value="0.5,0.5" />
                                            <EasingPointKeyFrame
                                                KeyTime="0:0:2"
                                                Value="1.5,0.5" />
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border
                            CornerRadius="1"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" />
                        <Rectangle
                            x:Name="PART_Track" />
                        <Grid
                            x:Name="PART_Indicator"
                            ClipToBounds="true"
                            Margin="3"
                            HorizontalAlignment="Left">
                            <Rectangle
                                x:Name="Indicator"
                                Fill="{TemplateBinding Foreground}" />
                            <Rectangle
                                x:Name="Animation"
                                Fill="{TemplateBinding Foreground}"
                                RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                        <TextBlock
                            FontSize="{TemplateBinding FontSize}"
                            Foreground="{StaticResource ForegroundBrush}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, StringFormat=\{0\}%}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="Orientation"
                            Value="Vertical">
                            <Setter
                                Property="LayoutTransform"
                                TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform
                                        Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger
                            Property="IsIndeterminate"
                            Value="true">
                            <Setter
                                Property="Visibility"
                                TargetName="Indicator"
                                Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TreeView -->
    <ControlTemplate
        x:Key="TreeViewControlTemplate"
        TargetType="{x:Type TreeView}">
        <Border
            x:Name="Bd"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <ScrollViewer
                x:Name="_tv_scrollviewer_"
                Background="{TemplateBinding Background}"
                CanContentScroll="False"
                Focusable="False"
                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                Padding="{TemplateBinding Padding}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                <ItemsPresenter />
            </ScrollViewer>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger
                Property="VirtualizingPanel.IsVirtualizing"
                Value="True">
                <Setter
                    Property="CanContentScroll"
                    TargetName="_tv_scrollviewer_"
                    Value="True" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style
        TargetType="{x:Type TreeView}">
        <Setter
            Property="Background"
            Value="Transparent" />
        <Setter
            Property="BorderThickness"
            Value="0" />
        <Setter
            Property="FontSize"
            Value="11" />
        <Setter
            Property="FontFamily"
            Value="/Fonts/#Roboto Regular" />
        <Setter
            Property="Padding"
            Value="1" />
        <Setter
            Property="Margin"
            Value="3" />
        <Setter
            Property="Foreground"
            Value="{StaticResource ForegroundBrush}" />
        <Setter
            Property="ScrollViewer.HorizontalScrollBarVisibility"
            Value="Disabled" />
        <Setter
            Property="ScrollViewer.VerticalScrollBarVisibility"
            Value="Auto" />
        <Setter
            Property="VerticalContentAlignment"
            Value="Center" />
        <Setter
            Property="Template"
            Value="{DynamicResource TreeViewControlTemplate}" />
    </Style>

    <Style
        x:Key="TreeViewItemFocusVisual">
        <Setter
            Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ExpandCollapseToggleStyle"
        TargetType="{x:Type ToggleButton}">
        <Setter
            Property="Focusable"
            Value="False" />
        <Setter
            Property="Width"
            Value="25" />
        <Setter
            Property="Height"
            Value="25" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ToggleButton}">
                    <Border
                        BorderThickness="0"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Background="Transparent"
                        Padding="5">
                        <Path
                            x:Name="ExpandPath"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Fill="{StaticResource ForegroundBrush}"
                            StrokeThickness="0"
                            Data="M0,0 L0,13 L6,6 L6,7 z" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsChecked"
                            Value="True">
                            <Setter
                                Property="Data"
                                TargetName="ExpandPath"
                                Value="M0,0 L13,0 L7,6 L6,6 z" />
                            <Setter
                                Property="Fill"
                                TargetName="ExpandPath"
                                Value="{StaticResource SelectionBackgroundBrush}" />
                            <Setter
                                Property="Stroke"
                                TargetName="ExpandPath"
                                Value="{StaticResource SelectionBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        TargetType="{x:Type TreeViewItem}">
        <Setter
            Property="Background"
            Value="Transparent" />
        <Setter
            Property="Padding"
            Value="1,0,0,0" />
        <Setter
            Property="Cursor"
            Value="Hand" />
        <Setter
            Property="Foreground"
            Value="{StaticResource ForegroundBrush}" />
        <Setter
            Property="FocusVisualStyle"
            Value="{StaticResource TreeViewItemFocusVisual}" />
        <Setter
            Property="IsExpanded"
            Value="True" />
        <Setter
            Property="IsSelected"
            Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type TreeViewItem}">
                    <ControlTemplate.Resources>
                        <cnv:LeftMarginMultiplierConverter
                            x:Key="LeftMarginMultiplierConverter"
                            Length="19" />
                    </ControlTemplate.Resources>

                    <StackPanel>

                        <Border
                            x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderThickness="1"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="Stretch">
                            <Grid
                                Margin="{Binding Converter={StaticResource LeftMarginMultiplierConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition
                                        Width="19" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <ToggleButton
                                    x:Name="Expander"
                                    Style="{StaticResource ExpandCollapseToggleStyle}"
                                    ClickMode="Press"
                                    IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />

                                <ContentPresenter
                                    x:Name="PART_Header"
                                    Margin="4,0,0,0"
                                    Grid.Column="1"
                                    VerticalAlignment="Center"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    HorizontalAlignment="Stretch"
                                    ContentSource="Header" />

                            </Grid>

                        </Border>

                        <ItemsPresenter
                            x:Name="ItemsHost" />

                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsExpanded"
                            Value="False">
                            <Setter
                                Property="Visibility"
                                TargetName="ItemsHost"
                                Value="Collapsed" />
                        </Trigger>
                        <Trigger
                            Property="HasItems"
                            Value="false">
                            <Setter
                                Property="Visibility"
                                TargetName="Expander"
                                Value="Hidden" />
                        </Trigger>
                        <Trigger
                            Property="IsSelected"
                            Value="true">
                            <Setter
                                Property="Background"
                                TargetName="Bd"
                                Value="{StaticResource SelectionBackgroundBrush}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="Bd"
                                Value="{StaticResource SelectionBackgroundBrush}" />
                            <Setter
                                Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="IsSelected"
                                    Value="True" />
                                <Condition
                                    Property="IsSelectionActive"
                                    Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter
                                Property="Background"
                                TargetName="Bd"
                                Value="{StaticResource SelectionBackgroundBrush}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="Bd"
                                Value="{StaticResource SelectionBackgroundBrush}" />
                            <Setter
                                Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="IsSelected"
                                    Value="True" />
                                <Condition
                                    Property="IsSelectionActive"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter
                                Property="Background"
                                TargetName="Bd"
                                Value="{StaticResource SelectionBackgroundBrush}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="Bd"
                                Value="{StaticResource SelectionBackgroundBrush}" />
                            <Setter
                                Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                        </MultiTrigger>
                        <Trigger
                            Property="IsEnabled"
                            Value="False">
                            <Setter
                                Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger
                            Property="IsMouseOver"
                            SourceName="Bd"
                            Value="True">
                            <Setter
                                Property="Background"
                                TargetName="Bd"
                                Value="{StaticResource SelectionBackgroundBrush}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="Bd"
                                Value="{StaticResource LightBlueBrush}" />
                            <Setter
                                Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="CheckBoxStyle"
        TargetType="{x:Type CheckBox}">

        <Setter
            Property="Cursor"
            Value="Hand" />
        <Setter
            Property="SnapsToDevicePixels"
            Value="true" />
        <Setter
            Property="OverridesDefaultStyle"
            Value="true" />
        <Setter
            Property="FocusVisualStyle"
            Value="{x:Null}" />
        <Setter
            Property="Foreground"
            Value="{StaticResource ForegroundBrush}" />
        <Setter
            Property="Height"
            Value="20" />
        <Setter
            Property="FontSize"
            Value="12" />
        <Setter
            Property="FontFamily"
            Value="/Fonts/#Roboto Regular" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type CheckBox}">
                    <BulletDecorator
                        VerticalAlignment="Center"
                        Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border
                                x:Name="Border"
                                Width="20"
                                Height="20"
                                CornerRadius="1"
                                Background="{StaticResource WindowBackgroundBrush}"
                                BorderBrush="{StaticResource BorderBrush}"
                                BorderThickness="1">
                                <Grid>
                                    <Path
                                        Visibility="Collapsed"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        x:Name="CheckMark"
                                        SnapsToDevicePixels="False"
                                        Stroke="{StaticResource SelectionBackgroundBrush}"
                                        Fill="{StaticResource SelectionBackgroundBrush}"
                                        Data="F1M1,5L3,7 4,7 10,0 11,1 4,9 3,9 0,6z" />
                                    <Path
                                        Visibility="Collapsed"
                                        Width="7"
                                        Height="7"
                                        x:Name="InderminateMark"
                                        SnapsToDevicePixels="False"
                                        StrokeThickness="2"
                                        Data="M 0 7 L 7 0">
                                        <Path.Stroke>
                                            <SolidColorBrush
                                                Color="{StaticResource GlyphColor}" />
                                        </Path.Stroke>
                                    </Path>
                                </Grid>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter
                            Margin="8,0,0,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            RecognizesAccessKey="True" />
                    </BulletDecorator>

                    <ControlTemplate.Triggers>
                                            
                        <Trigger
                            Property="IsMouseOver"
                            Value="True">

                            <Setter
                                Property="Background"
                                TargetName="Border"
                                Value="{StaticResource MenuBackgroundBrush}" />

                        </Trigger>

                        <Trigger
                            Property="IsChecked"
                            Value="True">

                            <Setter
                                Property="Visibility"
                                TargetName="CheckMark"
                                Value="Visible" />

                        </Trigger>

                        <Trigger
                            Property="IsEnabled"
                            Value="False">

                            <Setter
                                Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style
        TargetType="{x:Type GroupBox}">

        <Setter
            Property="FontSize"
            Value="12" />

        <Setter
            Property="Foreground"
            Value="{StaticResource ForegroundBrush}" />

        <Setter
            Property="Height"
            Value="107" />

        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type GroupBox}">
                    <Border
                        BorderBrush="{StaticResource BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="1"
                        Height="{TemplateBinding Height}"
                        Background="{StaticResource PanelBackgroundBrush}">

                        <Border.Effect>
                            <DropShadowEffect
                                BlurRadius="7"
                                ShadowDepth="0"
                                Color="{DynamicResource DropShadowColor}" />
                        </Border.Effect>

                        <Grid>

                            <Grid.RowDefinitions>
                                <RowDefinition
                                    Height="24" />
                                <RowDefinition
                                    Height="*" />
                            </Grid.RowDefinitions>

                            <Border
                                Grid.Row="0"
                                BorderThickness="0"
                                Background="{StaticResource BorderBrush}"
                                Padding="10,0,0,0"
                                Height="24">

                                <ContentPresenter
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    ContentSource="Header"
                                    VerticalAlignment="Center"
                                    TextBlock.FontSize="{TemplateBinding FontSize}"
                                    TextBlock.Foreground="{TemplateBinding Foreground}" />

                            </Border>

                            <ContentPresenter
                                Grid.Row="1"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Margin="{TemplateBinding Padding}"
                                Content="{TemplateBinding Content}" />

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style
        TargetType="{x:Type xctk:ButtonSpinner}">
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="Focusable"
            Value="False" />
        <Setter
            Property="HorizontalContentAlignment"
            Value="Stretch" />
        <Setter
            Property="IsTabStop"
            Value="True" />
        <Setter
            Property="Padding"
            Value="1" />
        <Setter
            Property="ShowButtonSpinner"
            Value="True" />
        <Setter
            Property="VerticalContentAlignment"
            Value="Center" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type xctk:ButtonSpinner}">
                    <Border
                        x:Name="Border"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="1"
                        SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition
                                    x:Name="firstContentColumn"
                                    Width="*" />
                                <ColumnDefinition
                                    x:Name="secondContentColumn"
                                    Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Content="{TemplateBinding Content}"
                                Focusable="False"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <Grid
                                x:Name="gridContent"
                                Grid.Column="1"
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                Visibility="{TemplateBinding ShowButtonSpinner, Converter={dh:BoolToVisibilityConverter}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition
                                        Height="*" />
                                    <RowDefinition
                                        Height="*" />
                                </Grid.RowDefinitions>
                                <RepeatButton
                                    x:Name="PART_IncreaseButton"
                                    IsTabStop="{TemplateBinding IsTabStop}"
                                    BorderThickness="1,0,0,0"
                                    Height="11"
                                    Cursor="Hand"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    VerticalContentAlignment="Bottom"
                                    Background="Transparent">
                                    <RepeatButton.Template>
                                        <ControlTemplate>
                                            <Border
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                Background="{TemplateBinding Background}"
                                                BorderThickness="{TemplateBinding BorderThickness}">
                                                <Path
                                                    Data="M0,5L4,0 8,5z"
                                                    Focusable="False"
                                                    Fill="#9b9b9b"
                                                    HorizontalAlignment="Center"
                                                    Height="5"
                                                    Margin="0,0,0,2"
                                                    SnapsToDevicePixels="True"
                                                    VerticalAlignment="Bottom"
                                                    Width="8" />
                                            </Border>
                                        </ControlTemplate>
                                    </RepeatButton.Template>
                                </RepeatButton>
                                <RepeatButton
                                    x:Name="PART_DecreaseButton"
                                    IsTabStop="{TemplateBinding IsTabStop}"
                                    BorderThickness="1,0,0,0"
                                    Height="11"
                                    Cursor="Hand"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="Transparent"
                                    VerticalContentAlignment="Top"
                                    Grid.Row="1">
                                    <RepeatButton.Template>
                                        <ControlTemplate
                                            TargetType="{x:Type RepeatButton}">
                                            <Border
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                Background="{TemplateBinding Background}"
                                                BorderThickness="{TemplateBinding BorderThickness}">
                                                <Path
                                                    Data="M0,0L8,0 4,5z"
                                                    Focusable="False"
                                                    Fill="#9b9b9b"
                                                    HorizontalAlignment="Center"
                                                    Height="5"
                                                    Margin="0,2,0,0"
                                                    SnapsToDevicePixels="True"
                                                    VerticalAlignment="Top"
                                                    Width="8" />
                                            </Border>
                                        </ControlTemplate>
                                    </RepeatButton.Template>
                                </RepeatButton>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        TargetType="{x:Type xctk:ByteUpDown}">
        <Setter
            Property="Background"
            Value="{StaticResource WindowBackgroundBrush}" />
        <Setter
            Property="Foreground"
            Value="{StaticResource ForegroundBrush}" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource BorderBrush}" />
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="HorizontalContentAlignment"
            Value="Right" />
        <Setter
            Property="IsTabStop"
            Value="False" />
        <Setter
            Property="VerticalContentAlignment"
            Value="Center" />
        <Setter
            Property="TextAlignment"
            Value="Right" />
        <Setter
            Property="Width"
            Value="48" />
        <Setter
            Property="Height"
            Value="24" />
        <Setter
            Property="WatermarkTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl
                        Content="{Binding}"
                        Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                        Focusable="False"
                        Margin="0,0,3,0" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type xctk:ByteUpDown}">
                    <xctk:ButtonSpinner
                        x:Name="PART_Spinner"
                        AllowSpin="{Binding AllowSpin, RelativeSource={RelativeSource TemplatedParent}}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        ButtonSpinnerLocation="{Binding ButtonSpinnerLocation, RelativeSource={RelativeSource TemplatedParent}}"
                        Background="{TemplateBinding Background}"
                        HorizontalContentAlignment="Stretch"
                        IsTabStop="False"
                        ShowButtonSpinner="{Binding ShowButtonSpinner, RelativeSource={RelativeSource TemplatedParent}}"
                        VerticalContentAlignment="Stretch">
                        <xctk:WatermarkTextBox
                            x:Name="PART_TextBox"
                            AutoMoveFocus="{Binding AutoMoveFocus, RelativeSource={RelativeSource TemplatedParent}}"
                            AutoSelectBehavior="{Binding AutoSelectBehavior, RelativeSource={RelativeSource TemplatedParent}}"
                            AcceptsReturn="False"
                            BorderThickness="0"
                            Background="Transparent"
                            ContextMenu="{TemplateBinding ContextMenu}"
                            Foreground="{TemplateBinding Foreground}"
                            FontWeight="{TemplateBinding FontWeight}"
                            FontStyle="{TemplateBinding FontStyle}"
                            FontStretch="{TemplateBinding FontStretch}"
                            FontSize="{TemplateBinding FontSize}"
                            FontFamily="{TemplateBinding FontFamily}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            IsTabStop="True"
                            IsUndoEnabled="True"
                            MinWidth="20"
                            Padding="{TemplateBinding Padding}"
                            TextAlignment="{Binding TextAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                            TextWrapping="NoWrap"
                            TabIndex="{TemplateBinding TabIndex}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            WatermarkTemplate="{Binding WatermarkTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                            Watermark="{Binding Watermark, RelativeSource={RelativeSource TemplatedParent}}" />
                    </xctk:ButtonSpinner>
                    <ControlTemplate.Triggers>
                        <DataTrigger
                            Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}"
                            Value="True">
                            <Setter
                                Property="IsReadOnly"
                                TargetName="PART_TextBox"
                                Value="True" />
                        </DataTrigger>
                        <Trigger
                            Property="IsEnabled"
                            Value="False">
                            <Setter
                                Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger
                            Property="IsFocused"
                            Value="True">
                            <Setter
                                Property="FocusManager.FocusedElement"
                                TargetName="PART_TextBox"
                                Value="{Binding ElementName=PART_TextBox}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        TargetType="{x:Type xctk:DoubleUpDown}">
        <Setter
            Property="Background"
            Value="{StaticResource WindowBackgroundBrush}" />
        <Setter
            Property="Foreground"
            Value="{StaticResource ForegroundBrush}" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource BorderBrush}" />
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="HorizontalContentAlignment"
            Value="Right" />
        <Setter
            Property="IsTabStop"
            Value="False" />
        <Setter
            Property="VerticalContentAlignment"
            Value="Center" />
        <Setter
            Property="TextAlignment"
            Value="Right" />
        <Setter
            Property="Width"
            Value="72" />
        <Setter
            Property="Height"
            Value="24" />
        <Setter
            Property="WatermarkTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl
                        Content="{Binding}"
                        Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                        Focusable="False"
                        Margin="0,0,3,0" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type xctk:DoubleUpDown}">
                    <xctk:ButtonSpinner
                        x:Name="PART_Spinner"
                        AllowSpin="{Binding AllowSpin, RelativeSource={RelativeSource TemplatedParent}}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        ButtonSpinnerLocation="{Binding ButtonSpinnerLocation, RelativeSource={RelativeSource TemplatedParent}}"
                        Background="{TemplateBinding Background}"
                        HorizontalContentAlignment="Stretch"
                        IsTabStop="False"
                        ShowButtonSpinner="{Binding ShowButtonSpinner, RelativeSource={RelativeSource TemplatedParent}}"
                        VerticalContentAlignment="Stretch">
                        <xctk:WatermarkTextBox
                            x:Name="PART_TextBox"
                            AutoMoveFocus="{Binding AutoMoveFocus, RelativeSource={RelativeSource TemplatedParent}}"
                            AutoSelectBehavior="{Binding AutoSelectBehavior, RelativeSource={RelativeSource TemplatedParent}}"
                            AcceptsReturn="False"
                            BorderThickness="0"
                            Background="Transparent"
                            ContextMenu="{TemplateBinding ContextMenu}"
                            Foreground="{TemplateBinding Foreground}"
                            FontWeight="{TemplateBinding FontWeight}"
                            FontStyle="{TemplateBinding FontStyle}"
                            FontStretch="{TemplateBinding FontStretch}"
                            FontSize="{TemplateBinding FontSize}"
                            FontFamily="{TemplateBinding FontFamily}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            IsTabStop="True"
                            IsUndoEnabled="True"
                            MinWidth="20"
                            Padding="{TemplateBinding Padding}"
                            TextAlignment="{Binding TextAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                            TextWrapping="NoWrap"
                            TabIndex="{TemplateBinding TabIndex}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            WatermarkTemplate="{Binding WatermarkTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                            Watermark="{Binding Watermark, RelativeSource={RelativeSource TemplatedParent}}" />
                    </xctk:ButtonSpinner>
                    <ControlTemplate.Triggers>
                        <DataTrigger
                            Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}"
                            Value="True">
                            <Setter
                                Property="IsReadOnly"
                                TargetName="PART_TextBox"
                                Value="True" />
                        </DataTrigger>
                        <Trigger
                            Property="IsEnabled"
                            Value="False">
                            <Setter
                                Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger
                            Property="IsFocused"
                            Value="True">
                            <Setter
                                Property="FocusManager.FocusedElement"
                                TargetName="PART_TextBox"
                                Value="{Binding ElementName=PART_TextBox}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ComboBoxToggleButtonStyle"
        TargetType="{x:Type ToggleButton}">
        <Setter
            Property="OverridesDefaultStyle"
            Value="true" />
        <Setter
            Property="IsTabStop"
            Value="false" />
        <Setter
            Property="Focusable"
            Value="false" />
        <Setter
            Property="ClickMode"
            Value="Press" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="templateRoot"
                        SnapsToDevicePixels="true"
                        Background="{StaticResource WindowBackgroundBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{StaticResource BorderBrush}">
                        <Border
                            x:Name="splitBorder"
                            Width="20"
                            SnapsToDevicePixels="true"
                            Margin="0"
                            HorizontalAlignment="Right"
                            BorderThickness="1"
                            BorderBrush="Transparent">
                            <Path
                                x:Name="arrow"
                                Margin="0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                Fill="#9b9b9b"
                                Data="M0,0L8,0 4,5z" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsMouseOver"
                            Value="true">
                            <Setter
                                Property="Fill"
                                TargetName="arrow"
                                Value="{StaticResource ForegroundBrush}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                    Value="true" />
                                <Condition
                                    Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter
                                Property="Background"
                                TargetName="templateRoot"
                                Value="{StaticResource PanelBackgroundBrush}" />
                        </MultiDataTrigger>
                        <Trigger
                            Property="IsPressed"
                            Value="true">
                            <Setter
                                Property="Fill"
                                TargetName="arrow"
                                Value="{StaticResource ForegroundBrush}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                    Value="true" />
                                <Condition
                                    Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter
                                Property="Background"
                                TargetName="templateRoot"
                                Value="{StaticResource PanelBackgroundBrush}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate
        x:Key="ComboBoxTemplate"
        TargetType="{x:Type ComboBox}">
        <Grid
            x:Name="templateRoot"
            SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="*" />
                <ColumnDefinition
                    MinWidth="20"
                    Width="0" />
            </Grid.ColumnDefinitions>

            <Popup
                x:Name="PART_Popup"
                AllowsTransparency="true"
                Grid.ColumnSpan="2"
                IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Margin="1"
                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                PopupAnimation="Slide"
                MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                Placement="Bottom">
                <Border
                    x:Name="dropDownBorder"
                    BorderBrush="{DynamicResource BorderBrush}"
                    BorderThickness="1"
                    Background="{DynamicResource WindowBackgroundBrush}">
                    <ScrollViewer
                        x:Name="DropDownScrollViewer">
                        <Grid
                            x:Name="grid"
                            RenderOptions.ClearTypeHint="Enabled">
                            <Canvas
                                x:Name="canvas"
                                HorizontalAlignment="Left"
                                Height="0"
                                VerticalAlignment="Top"
                                Width="0">
                                <Rectangle
                                    x:Name="opaqueRect"
                                    Fill="{Binding Background, ElementName=dropDownBorder}"
                                    Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                    Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                            </Canvas>
                            <ItemsPresenter
                                x:Name="ItemsPresenter"
                                TextBlock.FontFamily="{TemplateBinding FontFamily}"
                                TextBlock.FontSize="{TemplateBinding FontSize}"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>

            <ToggleButton
                x:Name="toggleButton"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}"
                Grid.ColumnSpan="2"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource ComboBoxToggleButtonStyle}" />

            <ContentPresenter
                x:Name="contentPresenter"
                TextBlock.FontSize="12"
                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                Content="{TemplateBinding SelectionBoxItem}"
                ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                IsHitTestVisible="false"                
                Margin="{TemplateBinding Padding}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger
                Property="HasItems"
                Value="false">
                <Setter
                    Property="Height"
                    TargetName="dropDownBorder"
                    Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition
                        Property="IsGrouping"
                        Value="true" />
                    <Condition
                        Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                        Value="false" />
                </MultiTrigger.Conditions>
                <Setter
                    Property="ScrollViewer.CanContentScroll"
                    Value="false" />
            </MultiTrigger>
            <Trigger
                Property="ScrollViewer.CanContentScroll"
                SourceName="DropDownScrollViewer"
                Value="false">
                <Setter
                    Property="Canvas.Top"
                    TargetName="opaqueRect"
                    Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter
                    Property="Canvas.Left"
                    TargetName="opaqueRect"
                    Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
            <Trigger
                Property="IsEnabled"
                Value="False">
                <Setter
                    Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style
        x:Key="ComboBoxStyle"
        TargetType="{x:Type ComboBox}">
        <Setter
            Property="FocusVisualStyle"
            Value="{x:Null}" />
        <Setter
            Property="Background"
            Value="{StaticResource WindowBackgroundBrush}" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource BorderBrush}" />
        <Setter
            Property="Foreground"
            Value="{StaticResource ForegroundBrush}" />
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="Height"
            Value="25" />
        <Setter
            Property="FontSize"
            Value="12" />
        <Setter
            Property="FontFamily"
            Value="/Fonts/#Roboto Regular" />
        <Setter
            Property="VerticalContentAlignment"
            Value="Center" />
        <Setter
            Property="ScrollViewer.HorizontalScrollBarVisibility"
            Value="Auto" />
        <Setter
            Property="ScrollViewer.VerticalScrollBarVisibility"
            Value="Auto" />
        <Setter
            Property="Padding"
            Value="6,3,5,3" />
        <Setter
            Property="ScrollViewer.CanContentScroll"
            Value="true" />
        <Setter
            Property="ScrollViewer.PanningMode"
            Value="Both" />
        <Setter
            Property="Stylus.IsFlicksEnabled"
            Value="False" />
        <Setter
            Property="ItemContainerStyle"
            Value="{DynamicResource ComboBoxItemStyle}" />
        <Setter
            Property="Template"
            Value="{StaticResource ComboBoxTemplate}" />

    </Style>

    <Style
        x:Key="ComboBoxItemStyle"
        TargetType="{x:Type ComboBoxItem}">
        <Setter
            Property="SnapsToDevicePixels"
            Value="True" />
        <Setter
            Property="Padding"
            Value="4,1" />
        <Setter
            Property="HorizontalContentAlignment"
            Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter
            Property="VerticalContentAlignment"
            Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter
            Property="Background"
            Value="Transparent" />
        <Setter
            Property="BorderBrush"
            Value="Transparent" />
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="FontSize"
            Value="12" />
        <Setter
            Property="FontFamily"
            Value="/Fonts/#Roboto Regular" />
        <Setter
            Property="FocusVisualStyle"
            Value="{x:Null}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ComboBoxItem}">
                    <Border
                        x:Name="Bd"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            TextBlock.FontSize="12"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="IsSelected"
                                    Value="False" />
                                <Condition
                                    Property="IsMouseOver"
                                    Value="True" />
                                <Condition
                                    Property="IsKeyboardFocused"
                                    Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter
                                Property="Background"
                                TargetName="Bd"
                                Value="{StaticResource SelectionBackgroundBrush}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="Bd"
                                Value="{StaticResource LightBlueBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="IsSelected"
                                    Value="True" />
                                <Condition
                                    Property="IsMouseOver"
                                    Value="False" />
                                <Condition
                                    Property="IsKeyboardFocused"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter
                                Property="Background"
                                TargetName="Bd"
                                Value="{StaticResource SelectionBackgroundBrush}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="Bd"
                                Value="{StaticResource LightBlueBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="IsSelected"
                                    Value="True" />
                                <Condition
                                    Property="IsMouseOver"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter
                                Property="Background"
                                TargetName="Bd"
                                Value="{StaticResource SelectionBackgroundBrush}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="Bd"
                                Value="{StaticResource LightBlueBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="IsSelected"
                                    Value="True" />
                                <Condition
                                    Property="IsMouseOver"
                                    Value="False" />
                                <Condition
                                    Property="IsKeyboardFocused"
                                    Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter
                                Property="Background"
                                TargetName="Bd"
                                Value="{StaticResource SelectionBackgroundBrush}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="Bd"
                                Value="{StaticResource SelectionBackgroundBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="IsSelected"
                                    Value="False" />
                                <Condition
                                    Property="IsMouseOver"
                                    Value="False" />
                                <Condition
                                    Property="IsKeyboardFocused"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter
                                Property="BorderBrush"
                                TargetName="Bd"
                                Value="{StaticResource LightBlueBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="IsSelected"
                                    Value="False" />
                                <Condition
                                    Property="IsMouseOver"
                                    Value="True" />
                                <Condition
                                    Property="IsKeyboardFocused"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter
                                Property="Background"
                                TargetName="Bd"
                                Value="{StaticResource SelectionBackgroundBrush}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="Bd"
                                Value="{StaticResource LightBlueBrush}" />
                        </MultiTrigger>
                        <Trigger
                            Property="IsEnabled"
                            Value="False">
                            <Setter
                                Property="TextElement.Foreground"
                                TargetName="Bd"
                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate
        x:Key="ListBoxItemControlTemplate"
        TargetType="{x:Type ListBoxItem}">
        <Grid>
            <!-- normal-->
            <Border
                x:Name="SelectedBorder"
                BorderBrush="Transparent"
                BorderThickness="1"
                Background="Transparent" />
            <!-- Content -->
            <ContentControl
                x:Name="contentPresenter"
                Margin="{TemplateBinding Padding}"
                Foreground="{TemplateBinding Foreground}"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                Content="{TemplateBinding Content}"
                VerticalAlignment="Center"
                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger
                Property="IsSelected"
                Value="True">
                <Setter
                    TargetName="SelectedBorder"
                    Property="Background"
                    Value="{StaticResource SelectionBackgroundBrush}" />
                <Setter
                    TargetName="SelectedBorder"
                    Property="BorderBrush"
                    Value="{StaticResource SelectionBackgroundBrush}" />
            </Trigger>
            <Trigger
                Property="IsEnabled"
                Value="False">
                <Setter
                    Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
            <Trigger
                Property="IsMouseOver"
                Value="True">
                <Setter
                    TargetName="SelectedBorder"
                    Property="Background"
                    Value="{StaticResource SelectionBackgroundBrush}" />
                <Setter
                    TargetName="SelectedBorder"
                    Property="BorderBrush"
                    Value="{StaticResource LightBlueBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style
        x:Key="ListBoxItemStyle"
        TargetType="{x:Type ListBoxItem}">

        <Setter
            Property="Padding"
            Value="10,0,0,0" />

        <Setter
            Property="Height"
            Value="24" />

        <Setter
            Property="FontSize"
            Value="12" />

        <Setter
            Property="VerticalContentAlignment"
            Value="Center" />

        <Setter
            Property="Cursor"
            Value="Hand" />

        <Setter
            Property="Template"
            Value="{StaticResource ListBoxItemControlTemplate}" />

    </Style>

    

    <Style
        TargetType="{x:Type ListBox}">
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ListBox}">
                    <Border
                        x:Name="Bd"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        Padding="1"
                        SnapsToDevicePixels="True">
                        <ScrollViewer
                            Focusable="False"
                            Padding="{TemplateBinding Padding}">
                            <ItemsPresenter
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="IsGrouping"
                                    Value="True" />
                                <Condition
                                    Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                                    Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter
                                Property="ScrollViewer.CanContentScroll"
                                Value="False" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

</ResourceDictionary>