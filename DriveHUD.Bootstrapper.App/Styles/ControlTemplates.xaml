<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:control="clr-namespace:DriveHUD.Bootstrapper.App.Controls">

    <SolidColorBrush
        x:Key="BackgroundBrush1"
        Color="#181a1d" />
    <SolidColorBrush
        x:Key="BackgroundBrush2"
        Color="#303134" />
    <SolidColorBrush
        x:Key="BackgroundBrush3"
        Color="#2a2d31" />
    <SolidColorBrush
        x:Key="BackgroundBrush4"
        Color="#314c96" />
    <SolidColorBrush
        x:Key="ForegroundBrush"
        Color="#7D7F84" />

    <Color
        x:Key="ControlMouseOverColor">#35383e</Color>
    <Color
        x:Key="ControlPressedColor">#FF211AA9</Color>

    <Style
        TargetType="TextBlock">
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
    </Style>

    <Style
        x:Key="Title_H1"
        TargetType="TextBlock">
        <Setter
            Property="Foreground"
            Value="#FF606060" />
        <Setter
            Property="FontSize"
            Value="14" />
        <Setter
            Property="Margin"
            Value="0,10" />
        <Setter
            Property="FontFamily"
            Value="Segoe UI" />
    </Style>

    <Style
        TargetType="TextBox">
        <Setter
            Property="Background"
            Value="{StaticResource BackgroundBrush3}"></Setter>
        <Setter
            Property="Foreground"
            Value="White"></Setter>
        <Setter
            Property="CaretBrush">
            <Setter.Value>
                <SolidColorBrush
                    Color="White" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        TargetType="RichTextBox">
        <Setter
            Property="Background"
            Value="{StaticResource BackgroundBrush3}"></Setter>
        <Setter
            Property="Foreground"
            Value="{DynamicResource ForegroundBrush}"></Setter>
        <Setter
            Property="IsReadOnly"
            Value="True"></Setter>
        <Setter
            Property="CaretBrush">
            <Setter.Value>
                <SolidColorBrush
                    Color="White" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="{x:Type CheckBox}"
        TargetType="{x:Type CheckBox}">
        <Setter
            Property="SnapsToDevicePixels"
            Value="true" />
        <Setter
            Property="OverridesDefaultStyle"
            Value="true" />
        <Setter
            Property="FocusVisualStyle"
            Value="{DynamicResource CheckBoxFocusVisual}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type CheckBox}">
                    <BulletDecorator
                        Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border
                                x:Name="Border"
                                Width="24"
                                Height="24"
                                CornerRadius="1"
                                Background="{DynamicResource BackgroundBrush3}"
                                BorderThickness="0">
                                <Border.BorderBrush>
                                    <SolidColorBrush
                                        Color="{DynamicResource ControlLightColor}" />
                                </Border.BorderBrush>
                                <Grid>
                                    <Path
                                        Visibility="Collapsed"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        x:Name="CheckMark"
                                        SnapsToDevicePixels="False"
                                        Data="F1M17.414,5.414C17.414,5.414 15.414,7.414 15.414,7.414 15.414,7.414 9.414,13.414 9.414,13.414 9.052,13.775 8.552,13.999 8,13.999 7.447,13.999 6.947,13.775 6.585,13.414 6.585,13.414 2.585,9.414 2.585,9.414 2.224,9.052 2,8.552 2,7.999 2,6.895 2.895,5.999 4,5.999 4.552,5.999 5.052,6.223 5.414,6.585 5.414,6.585 8,9.171 8,9.171 8,9.171 12.586,4.585 12.586,4.585 12.586,4.585 14.585,2.585 14.585,2.585 14.947,2.223 15.447,1.999 16,1.999 17.104,1.999 18,2.895 18,3.999 18,4.552 17.776,5.052 17.414,5.414z">
                                        <Path.Fill>
                                            <LinearGradientBrush
                                                StartPoint="0,0"
                                                EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop
                                                            Color="#4568b4" />
                                                        <GradientStop
                                                            Color="#3f60b6"
                                                            Offset="1.0" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Path.Fill>
                                    </Path>
                                    <Path
                                        Visibility="Collapsed"
                                        Width="7"
                                        Height="7"
                                        x:Name="InderminateMark"
                                        SnapsToDevicePixels="False"
                                        StrokeThickness="2"
                                        Data="M 0 7 L 7 0">
                                        <Path.Stroke>
                                            <SolidColorBrush
                                                Color="{DynamicResource GlyphColor}" />
                                        </Path.Stroke>
                                    </Path>
                                </Grid>
                            </Border>
                        </BulletDecorator.Bullet>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup
                                x:Name="CommonStates">
                                <VisualState
                                    x:Name="Normal" />
                                <VisualState
                                    x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Panel.Background).Color">
                                            <EasingColorKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource ControlMouseOverColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Border.BorderBrush).Color">
                                            <EasingColorKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource ControlMouseOverColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState
                                    x:Name="Pressed" />
                                <VisualState
                                    x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup
                                x:Name="CheckStates">
                                <VisualState
                                    x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Storyboard.TargetName="CheckMark">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0"
                                                Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState
                                    x:Name="Unchecked" />
                                <VisualState
                                    x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Storyboard.TargetName="InderminateMark">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0"
                                                Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter
                            Margin="8,0,0,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            RecognizesAccessKey="True" />
                    </BulletDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#region ScrollBar-->
    <Style
        x:Key="ScrollBarPageButton"
        TargetType="{x:Type RepeatButton}">
        <Setter
            Property="SnapsToDevicePixels"
            Value="True" />
        <Setter
            Property="OverridesDefaultStyle"
            Value="true" />
        <Setter
            Property="IsTabStop"
            Value="false" />
        <Setter
            Property="Focusable"
            Value="false" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type RepeatButton}">
                    <Border
                        Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ScrollBarThumb"
        TargetType="{x:Type Thumb}">
        <Setter
            Property="SnapsToDevicePixels"
            Value="True" />
        <Setter
            Property="OverridesDefaultStyle"
            Value="true" />
        <Setter
            Property="IsTabStop"
            Value="false" />
        <Setter
            Property="Focusable"
            Value="false" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Thumb}">
                    <Border
                        CornerRadius="3"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate
        x:Key="VerticalScrollBar"
        TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition
                    MaxHeight="18" />
                <RowDefinition
                    Height="0.00001*" />
                <RowDefinition
                    MaxHeight="18" />
            </Grid.RowDefinitions>
            <Border
                Grid.RowSpan="3"
                Background="#FF17191C"
                CornerRadius="3" />
            <RepeatButton
                Grid.Row="0"
                Visibility="Collapsed"
                Height="18"
                Command="ScrollBar.LineUpCommand"
                Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track
                x:Name="PART_Track"
                Grid.RowSpan="3"
                IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton
                        Background="Black"
                        Style="{StaticResource ScrollBarPageButton}"
                        Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
                        Style="{StaticResource ScrollBarThumb}"
                        Background="White"
                        BorderThickness="1 0 0 0" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton
                        Background="Black"
                        Style="{StaticResource ScrollBarPageButton}"
                        Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton
                Grid.Row="3"
                Visibility="Collapsed"
                Height="18"
                Command="ScrollBar.LineDownCommand"
                Content="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate
        x:Key="HorizontalScrollBar"
        TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    MaxWidth="18" />
                <ColumnDefinition
                    Width="0.00001*" />
                <ColumnDefinition
                    MaxWidth="18" />
            </Grid.ColumnDefinitions>
            <Border
                Grid.ColumnSpan="3"
                CornerRadius="2"
                Background="#FF17191C" />
            <RepeatButton
                Grid.Column="0"
                Visibility="Collapsed"
                Width="18"
                Command="ScrollBar.LineLeftCommand"
                Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track
                x:Name="PART_Track"
                Grid.ColumnSpan="3"
                IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton
                        Background="Black"
                        Style="{StaticResource ScrollBarPageButton}"
                        Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
                        Style="{StaticResource ScrollBarThumb}"
                        Background="White"
                        BorderThickness="0 1 0 0" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton
                        Background="Black"
                        Style="{StaticResource ScrollBarPageButton}"
                        Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton
                Grid.Column="3"
                Visibility="Collapsed"
                Width="18"
                Command="ScrollBar.LineRightCommand"
                Content="M 0 0 L 4 4 L 0 8 Z" />
        </Grid>
    </ControlTemplate>

    <Style
        x:Key="{x:Type ScrollBar}"
        TargetType="{x:Type ScrollBar}">
        <Setter
            Property="SnapsToDevicePixels"
            Value="True" />
        <Setter
            Property="OverridesDefaultStyle"
            Value="true" />
        <Style.Triggers>
            <Trigger
                Property="Orientation"
                Value="Horizontal">
                <Setter
                    Property="Width"
                    Value="Auto" />
                <Setter
                    Property="Height"
                    Value="6" />
                <Setter
                    Property="Template"
                    Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger
                Property="Orientation"
                Value="Vertical">
                <Setter
                    Property="Width"
                    Value="6" />
                <Setter
                    Property="Height"
                    Value="Auto" />
                <Setter
                    Property="Template"
                    Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region Button -->
    <Style
        x:Key="ButtonFocusVisual">
        <Setter
            Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle
                            Margin="2"
                            StrokeThickness="1"
                            Stroke="#60000000"
                            StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button -->
    <Style
        TargetType="Button">
        <Setter
            Property="Cursor"
            Value="Hand" />
        <Setter
            Property="SnapsToDevicePixels"
            Value="true" />
        <Setter
            Property="OverridesDefaultStyle"
            Value="true" />
        <Setter
            Property="Background"
            Value="{DynamicResource BackgroundBrush3}" />
        <Setter
            Property="FocusVisualStyle"
            Value="{DynamicResource ButtonFocusVisual}" />
        <Setter
            Property="MinHeight"
            Value="23" />
        <Setter
            Property="MinWidth"
            Value="40" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="Button">
                    <Border
                        x:Name="Border"
                        TextBlock.Foreground="{TemplateBinding Foreground}"
                        Padding="{TemplateBinding Padding}"
                        CornerRadius="2"
                        BorderThickness="0"
                        Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup
                                x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition
                                        GeneratedDuration="0:0:0.5" />
                                    <VisualTransition
                                        GeneratedDuration="0"
                                        To="Pressed" />
                                </VisualStateGroup.Transitions>
                                <VisualState
                                    x:Name="Normal" />
                                <VisualState
                                    x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Border.Background).Color">
                                            <EasingColorKeyFrame
                                                KeyTime="0"
                                                Value="#34519c" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState
                                    x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(Border.Background).Color"
                                            Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame
                                                KeyTime="0"
                                                Value="#2c437f" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState
                                    x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(Border.Background).Color"
                                            Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame
                                                KeyTime="0"
                                                Value="#FFAEA5A5" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter
                            Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsDefault"
                            Value="true">
                            <Setter
                                TargetName="Border"
                                Property="BorderBrush">
                                <Setter.Value>
                                    <LinearGradientBrush
                                        StartPoint="0,0"
                                        EndPoint="0,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop
                                                    Color="{DynamicResource DefaultBorderBrushLightBrush}"
                                                    Offset="0.0" />
                                                <GradientStop
                                                    Color="{DynamicResource DefaultBorderBrushDarkColor}"
                                                    Offset="1.0" />
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>

                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region ProgressBar-->
    <Style
        TargetType="{x:Type ProgressBar}">
        <Setter
            Property="Foreground"
            Value="{StaticResource BackgroundBrush4}" />
        <Setter
            Property="Background"
            Value="{StaticResource BackgroundBrush1}" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource BackgroundBrush1}" />
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="FontSize"
            Value="12" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ProgressBar}">
                    <Grid
                        x:Name="TemplateRoot">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition
                                Width="Auto" />
                            <ColumnDefinition
                                Width="*" />
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup
                                x:Name="CommonStates">
                                <VisualState
                                    x:Name="Determinate" />
                                <VisualState
                                    x:Name="Indeterminate">
                                    <Storyboard
                                        RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                            Storyboard.TargetName="Animation">
                                            <EasingDoubleKeyFrame
                                                KeyTime="0"
                                                Value="0.25" />
                                            <EasingDoubleKeyFrame
                                                KeyTime="0:0:1"
                                                Value="0.25" />
                                            <EasingDoubleKeyFrame
                                                KeyTime="0:0:2"
                                                Value="0.25" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)"
                                            Storyboard.TargetName="Animation">
                                            <EasingPointKeyFrame
                                                KeyTime="0"
                                                Value="-0.5,0.5" />
                                            <EasingPointKeyFrame
                                                KeyTime="0:0:1"
                                                Value="0.5,0.5" />
                                            <EasingPointKeyFrame
                                                KeyTime="0:0:2"
                                                Value="1.5,0.5" />
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border
                            Grid.Column="1"
                            Height="5"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" />
                        <Rectangle
                            x:Name="PART_Track"
                            Grid.Column="1" />
                        <Grid
                            x:Name="PART_Indicator"
                            Grid.Column="1"
                            Height="5"
                            ClipToBounds="True"
                            HorizontalAlignment="Left">
                            <Rectangle
                                x:Name="Indicator"
                                Fill="{TemplateBinding Foreground}" />
                            <Rectangle
                                x:Name="Animation"
                                Fill="{TemplateBinding Foreground}"
                                RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="Orientation"
                            Value="Vertical">
                            <Setter
                                Property="LayoutTransform"
                                TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform
                                        Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger
                            Property="IsIndeterminate"
                            Value="True">
                            <Setter
                                Property="Visibility"
                                TargetName="Indicator"
                                Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region ListBox-->
    <Style
        TargetType="{x:Type ListBoxItem}">
        <Setter
            Property="Background"
            Value="{DynamicResource BackgroundBrush3}" />
        <Setter
            Property="Foreground"
            Value="{DynamicResource ForegroundBrush}" />
        <Setter
            Property="IsEnabled"
            Value="False" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ListBoxItem}">
                    <Border
                        Margin="30 0"
                        Height="30"
                        Background="{DynamicResource BackgroundBrush3}"
                        BorderThickness="0, 0, 0, 0.5"
                        BorderBrush="{DynamicResource ForegroundBrush}">
                        <StackPanel>
                            <Border
                                Margin="0 1"
                                CornerRadius="2"
                                Background="{TemplateBinding Background}">
                                <TextBlock
                                    Margin="0 5"
                                    Text="{Binding}"
                                    Foreground="{TemplateBinding Foreground}"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    TextWrapping="Wrap">
                                </TextBlock>
                            </Border>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <Style
        TargetType="{x:Type control:AnimatedContentControl}">
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type control:AnimatedContentControl}">
                    <Grid>
                        <ContentPresenter
                            Content="{TemplateBinding Content}"
                            x:Name="PART_MainContent" />
                        <Rectangle
                            x:Name="PART_PaintArea" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>