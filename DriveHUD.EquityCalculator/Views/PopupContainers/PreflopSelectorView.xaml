<UserControl x:Class="DriveHUD.EquityCalculator.Views.PreflopSelectorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DriveHUD.EquityCalculator.Views"
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             xmlns:vm="clr-namespace:DriveHUD.EquityCalculator.ViewModels"
             xmlns:v="clr-namespace:DriveHUD.EquityCalculator.Views"
             xmlns:predef="clr-namespace:DriveHUD.Controls;assembly=DriveHUD.Controls"
             xmlns:enum="clr-namespace:Model.Enums;assembly=Model"
             xmlns:converter="clr-namespace:DriveHUD.Common.Wpf.Converters;assembly=DriveHUD.Common.Wpf"
             xmlns:global="clr-namespace:System.Globalization;assembly=mscorlib"
             xmlns:prism="http://www.codeplex.com/prism"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             mc:Ignorable="d">
    <UserControl.DataContext>
        <vm:PreflopSelectorViewModel/>
    </UserControl.DataContext>

    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding SelectedItem.CustomLikelihoodRequest, Mode=OneWay}">
            <prism:PopupWindowAction>
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="Window">
                        <Setter Property="MinWidth" Value="330" />
                        <Setter Property="Width" Value="330" />
                        <Setter Property="Height" Value="250" />
                        <Setter Property="Foreground" Value="#7D7F84" />
                        <Setter Property="Background" Value="#1F2124" />
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
                <prism:PopupWindowAction.WindowContent>
                    <v:CustomLikelihoodView />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>

        <prism:InteractionRequestTrigger SourceObject="{Binding PreDefinedRangesRequest, Mode=OneWay}">
            <prism:PopupWindowAction IsModal="True">
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="Window">
                        <Setter Property="SizeToContent" Value="WidthAndHeight" />
                        <Setter Property="Foreground" Value="#7D7F84" />
                        <Setter Property="Background" Value="#1F2124" />
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
                <prism:PopupWindowAction.WindowContent>
                    <predef:PreDefinedRangesView />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>

    <UserControl.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/DriveHUD.Common.Resources;component/Cards.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <converter:StaticResourceConverter x:Key="StaticResourceConverter"/>
            <converter:BoolToVisibilityConverterHiddenByDef x:Key="BoolToVisibilityHidden" />

            <ControlTemplate x:Key="MenuItemTemplate" TargetType="telerik:RadMenuItem">
                <Grid x:Name="RootElement">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="SubMenuOpen">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="HighlightVisual" Storyboard.TargetProperty="Fill">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{telerik:VisualStudio2013Resource ResourceKey=AccentDarkBrush}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="HighlightVisual" Storyboard.TargetProperty="Stroke">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{telerik:VisualStudio2013Resource ResourceKey=AccentDarkBrush}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextBlock.Foreground)">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{telerik:VisualStudio2013Resource ResourceKey=SelectedBrush}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimation To="1" Duration="0:0:0" Storyboard.TargetName="HighlightVisual" Storyboard.TargetProperty="Opacity"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Highlighted">
                                <Storyboard>
                                    <DoubleAnimation To="1" Duration="0:0:0" Storyboard.TargetName="HighlightVisual" Storyboard.TargetProperty="Opacity"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentGrid" To="0.2" Duration="0:0:0"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Normal"/>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="FocusStates">
                            <VisualState x:Name="Unfocused"/>
                            <VisualState x:Name="Focused"/>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="CheckedStates">
                            <VisualState x:Name="Checked"/>
                            <VisualState x:Name="Unchecked"/>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="RoleStates">
                            <VisualState x:Name="TopLevelItem">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Duration="0:0:0" Storyboard.TargetName="ContentGrid" Storyboard.TargetProperty="Margin">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Thickness>1</Thickness>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Duration="0:0:0" Storyboard.TargetName="PART_Popup" Storyboard.TargetProperty="Margin">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Thickness>0 0 3 3</Thickness>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimation To="1" Duration="0:0:0" Storyboard.TargetName="PART_Popup" Storyboard.TargetProperty="HorizontalOffset"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="TopLevelHeader">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Duration="0:0:0" Storyboard.TargetName="ContentGrid" Storyboard.TargetProperty="Margin">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Thickness>1</Thickness>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Duration="0:0:0" Storyboard.TargetName="PART_Popup" Storyboard.TargetProperty="Margin">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Thickness>0 0 3 3</Thickness>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimation To="1" Duration="0:0:0" Storyboard.TargetName="PART_Popup" Storyboard.TargetProperty="HorizontalOffset"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="SubmenuItem"/>
                            <VisualState x:Name="SubmenuHeader"/>
                            <VisualState x:Name="Separator"/>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="OrientationStates">
                            <VisualState x:Name="Horizontal"/>
                            <VisualState x:Name="Vertical"/>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="ChildrenStates">
                            <VisualState x:Name="HasChildren"/>
                            <VisualState x:Name="NoChildren"/>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="HeaderStates">
                            <VisualState x:Name="VisibleHeader"/>
                            <VisualState x:Name="EmptyHeader">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Visibility" Duration="0">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Collapsed</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="InputGestureTextStates">
                            <VisualState x:Name="EmptyInputGestureText"/>
                            <VisualState x:Name="VisibleInputGestureText">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_InputGestureText" Storyboard.TargetProperty="Visibility" Duration="0">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                    <Grid x:Name="ContentGrid" Margin="1 0 1 1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="HighlightVisual"
                        Grid.ColumnSpan="4"
                        Opacity="0"
                        Fill="#FF314c96"
                        StrokeThickness="1"
                        Stroke="#FF314c96"/>
                        <ContentPresenter x:Name="Content"
                        Grid.Column="1"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        RecognizesAccessKey="True"
                        ContentSource="Header"/>
                        <telerik:SharedSizeContentPresenter x:Name="PART_InputGestureText" Grid.Column="2" Visibility="Collapsed" SharedSizeGroupWidth="IGTColumn" Margin="40 3 3 3" Content="{TemplateBinding InputGestureText}"/>
                    </Grid>
                    <Popup x:Name="PART_Popup" HorizontalOffset="-1" VerticalOffset="-1" IsOpen="{TemplateBinding IsSubmenuOpen}" Focusable="false" AllowsTransparency="true">
                        <Grid Width="{TemplateBinding DropDownWidth}" Height="{TemplateBinding DropDownHeight}">
                            <Grid x:Name="PopupContentElement">
                                <Grid Opacity="0.3">
                                    <Rectangle Margin="1 1 -1 -1" Opacity="0.05" Stroke="Black" StrokeThickness="1" RadiusX="4" RadiusY="3"/>
                                    <Rectangle Margin="1 1 0 0" Opacity="0.1" Stroke="Black" StrokeThickness="1" RadiusX="3" RadiusY="2"/>
                                    <Rectangle Margin="2 2 1 1" Fill="Black" RadiusX="2" RadiusY="1" Opacity="0.3" StrokeThickness="1"/>
                                </Grid>
                                <Border
                                BorderThickness="1"
                                BorderBrush="{telerik:VisualStudio2013Resource ResourceKey=BasicBrush}"
                                Background="{telerik:VisualStudio2013Resource ResourceKey=AlternativeBrush}"
                                Margin="0 0 2 2">
                                    <Grid>
                                        <ScrollViewer x:Name="PART_ScrollViewer" telerik:SharedSizeScope.IsSharedSizeScope="True">
                                            <Grid>
                                                <ItemsPresenter/>
                                            </Grid>
                                        </ScrollViewer>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Grid>
                    </Popup>
                </Grid>
            </ControlTemplate>

            <Style x:Key="GridMenuItemStyle" TargetType="telerik:RadMenuItem">
                <Setter Property="Header" Value="{Binding Path=Header}"></Setter>
                <Setter Property="Foreground" Value="White"></Setter>
                <Setter Property="Background" Value="#181A1D"></Setter>
                <Setter Property="IsCheckable" Value="True"></Setter>
                <Setter Property="IsChecked" Value="{Binding Path=IsChecked,Mode=TwoWay}"/>
                <Setter Property="Template" Value="{StaticResource MenuItemTemplate}"/>
            </Style>

            <Style x:Key="TextBlockSelectedStyle" TargetType="TextBlock">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding  IsSelected}" Value="True">
                        <Setter Property="Foreground" Value="White" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <ScrollViewer Margin="20 10">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <StackPanel Grid.Column="0" Grid.Row="0">

                <ItemsControl ItemsSource="{Binding PreflopSelectorItems}" >
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Columns="13"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid Height="30" 
                                  Width="45" 
                                  HorizontalAlignment="Center" 
                                  VerticalAlignment="Center"
                                  Margin="1" 
                                  MouseEnter="Grid_MouseEnter">

                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Setter Property="Background" Value="#2a2d31" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                <Setter Property="Background" Value="#33519B" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <Grid.InputBindings>
                                    <MouseBinding Gesture="LeftDoubleClick" Command="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.OnDoubleClickCommand}" 
                                                               CommandParameter="{Binding}" />
                                    <MouseBinding Gesture="CTRL+LeftClick" Command="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.OnCtrlClickCommand}" 
                                                               CommandParameter="{Binding}"/>
                                    <MouseBinding Gesture="Alt+LeftClick" Command="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.OnAltClickCommand}" 
                                                               CommandParameter="{Binding}"/>

                                </Grid.InputBindings>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseEnter">
                                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.OnMouseEnterCommand}" 
                                                               CommandParameter="{Binding}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseDown">
                                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.OnMouseDownCommand}" 
                                                               CommandParameter="{Binding}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <TextBlock Grid.Row="0" Text="{Binding Caption}"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           Style="{StaticResource TextBlockSelectedStyle}"/>

                                <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Setter Property="Visibility" Value="Visible" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding LikelihoodPercent}" Value="-1">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>

                                    <TextBlock Margin="0"
                                               Text="{Binding LikelihoodPercent}"
                                               FontSize="9"
                                               Style="{StaticResource TextBlockSelectedStyle}">
                                    </TextBlock>
                                    <TextBlock Margin="0"
                                               Text="%" 
                                               FontSize="9"
                                               Style="{StaticResource TextBlockSelectedStyle}"/>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <telerik:RadContextMenu.ContextMenu>
                        <telerik:RadContextMenu Name="radContextMenu" ItemContainerStyle="{StaticResource GridMenuItemStyle}">
                            <telerik:RadMenuItem Header="{ResX Enum_Likelihood_Definitely}" 
                                                 Command="{Binding SelectedItem.SelectLikelihoodCommand}"
                                                 CommandParameter="{x:Static enum:Likelihood.Definitely}"/>
                            <telerik:RadMenuItem Header="{ResX Enum_Likelihood_Likely}"
                                                 Command="{Binding SelectedItem.SelectLikelihoodCommand}"
                                                 CommandParameter="{x:Static enum:Likelihood.Likely}"/>
                            <telerik:RadMenuItem Header="{ResX Enum_Likelihood_NotVeryLikely}" 
                                                 Command="{Binding SelectedItem.SelectLikelihoodCommand}"
                                                 CommandParameter="{x:Static enum:Likelihood.NotVeryLikely}"/>
                            <telerik:RadMenuItem Header="{ResX Enum_Likelihood_Rarely}" 
                                                 Command="{Binding SelectedItem.SelectLikelihoodCommand}"
                                                 CommandParameter="{x:Static enum:Likelihood.Rarely}"/>
                            <telerik:RadMenuItem Header="{ResX Enum_Likelihood_Custom}" 
                                                 Command="{Binding SelectedItem.SelectLikelihoodCommand}"
                                                 CommandParameter="{x:Static enum:Likelihood.Custom}"/>
                        </telerik:RadContextMenu>
                    </telerik:RadContextMenu.ContextMenu>
                </ItemsControl>



                <Grid  Margin="0,10,0,10">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Slider Grid.Column="0" Height="16" Style="{StaticResource SliderStyle1}" VerticalAlignment="Center" Maximum="1000" Minimum="0" Value="{Binding SliderValue, Mode=TwoWay}"/>
                        <telerik:RadNumericUpDown Style="{x:Null}" IsEnabled ="False" Value="{Binding SelectedPercentage, StringFormat={}{0:0.#}%}" ValueFormat="Numeric" Margin="10 0 0 0" Grid.Column="1">
                            <telerik:RadNumericUpDown.NumberFormatInfo>
                                <global:NumberFormatInfo NumberDecimalDigits="1"/>
                            </telerik:RadNumericUpDown.NumberFormatInfo>
                        </telerik:RadNumericUpDown>
                    </Grid>
                </Grid>
            </StackPanel>

            <StackPanel Grid.Column="1" Margin="10 0" Grid.Row="0" Orientation="Vertical">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Content="{ResX Common_Cards}" Margin="10" Command="{Binding ShowCardsViewCommands}" Width="70"/>
                    <Button Content="{ResX Common_Preflop}" Background="#33519B"  Style="{StaticResource ButtonStyle}" Margin="10" Width="70"/>
                </StackPanel>


                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>


                    <Path Grid.Row="0" Margin="0 0 5 0" Grid.Column="0" Data="M 0 8 L 5 13 10 3" Stroke="{StaticResource BackgroundBrush4}" />
                    <TextBlock Grid.Row="0" Grid.Column="1" Text="{ResX Common_Ranges_DoubleClick}" TextWrapping="Wrap" />
                    <Path Grid.Row="1" Margin="0 0 5 0" Grid.Column="0" Data="M 0 8 L 5 13 10 3" Stroke="{StaticResource BackgroundBrush4}" />
                    <TextBlock Grid.Row="1" Grid.Column="1" Text="{ResX Common_Ranges_HoldDown}" TextWrapping="Wrap"  />
                    <Path Grid.Row="2" Margin="0 0 5 0" Grid.Column="0" Data="M 0 8 L 5 13 10 3" Stroke="{StaticResource BackgroundBrush4}" />
                    <TextBlock Grid.Row="2" Grid.Column="1" Text="{ResX Common_Ranges_CtrlLeft}" TextWrapping="Wrap"  />
                    <Path Grid.Row="3" Margin="0 0 5 0" Grid.Column="0" Data="M 0 8 L 5 13 10 3" Stroke="{StaticResource BackgroundBrush4}" />
                    <TextBlock Grid.Row="3" Grid.Column="1" Text="{ResX Common_Ranges_AltLeft}" TextWrapping="Wrap" />
                </Grid>


                <StackPanel HorizontalAlignment="Center">
                    <Button Content="{ResX Common_Ranges_Predef}" Command="{Binding ShowPredefinedRangesViewCommand}" Height="30" Width="180" Margin="5"/>
                    <Button Content="{ResX Common_Ranges_All}" Command="{Binding SelectAllPairsCommand}" Height="30" Width="180" Margin="5"/>
                    <Button Content="{ResX Common_Ranges_Suited}" Command="{Binding SelectSuitedCommand}" Height="30" Width="180" Margin="5"/>
                    <Button Content="{ResX Common_Ranges_OffSuited}" Command="{Binding SelectOffSuitedCommand}" Height="30" Width="180" Margin="5"/>
                </StackPanel>

                <DockPanel Height="50">
                    <DockPanel DockPanel.Dock="Bottom">
                        <TextBlock Text="{ResX Common_Ranges_SuitsFor}"/>
                        <TextBlock Text="{Binding SuitsForCaption}" TextTrimming="WordEllipsis" 
                               TextWrapping="Wrap"/>
                        <TextBlock Text=":" />
                    </DockPanel>
                </DockPanel>

                <ItemsControl ItemsSource="{Binding SelectedItem.HandSuitsModelList}" >
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Margin="0 5" Columns="4"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>

                            <Grid HorizontalAlignment="Center" 
                                  VerticalAlignment="Center"
                                  Margin="1" >
                                <Grid.InputBindings>
                                    <MouseBinding Gesture="LeftClick" 
                                                  Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, 
                                                               Path=DataContext.OnSelectSuitCommand}" 
                                                  CommandParameter="{Binding}"
                                                  />
                                </Grid.InputBindings>

                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Setter Property="Background" Value="#1F2124" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                <Setter Property="Background" Value="#2a2d31" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>

                                <Image Margin="5" Visibility="{Binding IsVisible, 
                                    Converter={StaticResource BoolToVisibilityHidden}}">
                                    <Image.Source>
                                        <MultiBinding Converter="{StaticResource StaticResourceConverter}">
                                            <MultiBinding.Bindings>
                                                <Binding RelativeSource="{RelativeSource Self}" />
                                                <Binding Path="ResourceKey" />
                                            </MultiBinding.Bindings>
                                        </MultiBinding>
                                    </Image.Source>
                                </Image>

                            </Grid>

                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <TextBlock Text="{ResX Common_Ranges_Unselect}" TextAlignment="Center" />

            </StackPanel>

            <StackPanel Grid.Column="0" Grid.Row="2" Orientation="Horizontal">
                <Button Command="{Binding SaveCommand}"  Content="{ResX Common_Save}" Margin="15"  Width="75" Style="{StaticResource ButtonStyle}"/>
                <Button Command="{Binding ResetCommand}" Content="{ResX Common_Reset}" Margin="15" Width="75"/>
            </StackPanel>

        </Grid>
    </ScrollViewer>
</UserControl>
