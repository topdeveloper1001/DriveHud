<UserControl
    x:Class="DriveHUD.Application.Views.FilterAdvancedView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:dh="http://www.acepokersolutions.com/winfx/2015/xaml/presentation"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:cnv="clr-namespace:DriveHUD.Application.ValueConverters"
    xmlns:infra="clr-namespace:DriveHUD.Common.Wpf.Actions;assembly=DriveHUD.Common.Wpf"
    xmlns:prism="http://www.codeplex.com/prism"
    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
    xmlns:vw="clr-namespace:DriveHUD.Application.Views"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <UserControl.Resources>

        <cnv:CollectionViewGroupConverter
            x:Key="CollectionViewGroupConverter" />

        <Color
            x:Key="SelectionBackgroundColor">#33519b</Color>

        <SolidColorBrush
            x:Key="SelectionBackgroundBrush"
            Color="{StaticResource SelectionBackgroundColor}" />

        <SolidColorBrush
            x:Key="LightBlueBrush"
            Color="#456dd1" />

        <!-- TreeView -->
        <ControlTemplate
            x:Key="TreeViewControlTemplate"
            TargetType="{x:Type TreeView}">
            <Border
                x:Name="Bd"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="True">
                <ScrollViewer
                    x:Name="_tv_scrollviewer_"
                    CanContentScroll="False"
                    Focusable="False"
                    HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                    Padding="{TemplateBinding Padding}"
                    Background="{TemplateBinding Background}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                    <ItemsPresenter />
                </ScrollViewer>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger
                    Property="VirtualizingPanel.IsVirtualizing"
                    Value="True">
                    <Setter
                        Property="CanContentScroll"
                        TargetName="_tv_scrollviewer_"
                        Value="True" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style
            TargetType="{x:Type TreeView}">
            <Setter
                Property="Background"
                Value="{StaticResource BackgroundBrush3}" />
            <Setter
                Property="BorderThickness"
                Value="0" />
            <Setter
                Property="FontSize"
                Value="11" />
            <Setter
                Property="Padding"
                Value="1" />
            <Setter
                Property="Margin"
                Value="3" />
            <Setter
                Property="Foreground"
                Value="{StaticResource ForegroundBrush}" />
            <Setter
                Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Disabled" />
            <Setter
                Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
            <Setter
                Property="VerticalContentAlignment"
                Value="Center" />
            <Setter
                Property="Template"
                Value="{DynamicResource TreeViewControlTemplate}" />
        </Style>

        <Style
            x:Key="TreeViewItemFocusVisual">
            <Setter
                Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style
            x:Key="ExpandCollapseToggleStyle"
            TargetType="{x:Type ToggleButton}">
            <Setter
                Property="Focusable"
                Value="False" />
            <Setter
                Property="Width"
                Value="25" />
            <Setter
                Property="Height"
                Value="25" />
            <Setter
                Property="Template">
                <Setter.Value>
                    <ControlTemplate
                        TargetType="{x:Type ToggleButton}">
                        <Border
                            BorderThickness="0"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Background="Transparent"
                            Padding="5">
                            <Path
                                x:Name="ExpandPath"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                Fill="{StaticResource ForegroundBrush}"
                                StrokeThickness="0"
                                Data="M0,0 L0,13 L6,6 L6,7 z" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger
                                Property="IsChecked"
                                Value="True">
                                <Setter
                                    Property="Data"
                                    TargetName="ExpandPath"
                                    Value="M0,0 L13,0 L7,6 L6,6 z" />
                                <Setter
                                    Property="Fill"
                                    TargetName="ExpandPath"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                <Setter
                                    Property="Stroke"
                                    TargetName="ExpandPath"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style
            TargetType="{x:Type TreeViewItem}">
            <Setter
                Property="Background"
                Value="Transparent" />
            <Setter
                Property="Padding"
                Value="1,0,0,0" />
            <Setter
                Property="Cursor"
                Value="Hand" />
            <Setter
                Property="Foreground"
                Value="{StaticResource ForegroundBrush}" />
            <Setter
                Property="FocusVisualStyle"
                Value="{StaticResource TreeViewItemFocusVisual}" />
            <Setter
                Property="IsExpanded"
                Value="True" />
            <Setter
                Property="IsSelected"
                Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <Setter
                Property="Template">
                <Setter.Value>
                    <ControlTemplate
                        TargetType="{x:Type TreeViewItem}">
                        <ControlTemplate.Resources>
                            <cnv:LeftMarginMultiplierConverter
                                x:Key="LeftMarginMultiplierConverter"
                                Length="19" />
                        </ControlTemplate.Resources>

                        <StackPanel>

                            <Border
                                x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderThickness="1"
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="Stretch">
                                <Grid
                                    Margin="{Binding Converter={StaticResource LeftMarginMultiplierConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition
                                            Width="19" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>

                                    <ToggleButton
                                        x:Name="Expander"
                                        Style="{StaticResource ExpandCollapseToggleStyle}"
                                        ClickMode="Press"
                                        IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />

                                    <ContentPresenter
                                        x:Name="PART_Header"
                                        Margin="4,0,0,0"
                                        Grid.Column="1"
                                        VerticalAlignment="Center"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        HorizontalAlignment="Stretch"
                                        ContentSource="Header" />

                                </Grid>

                            </Border>

                            <ItemsPresenter
                                x:Name="ItemsHost" />

                        </StackPanel>

                        <ControlTemplate.Triggers>
                            <Trigger
                                Property="IsExpanded"
                                Value="False">
                                <Setter
                                    Property="Visibility"
                                    TargetName="ItemsHost"
                                    Value="Collapsed" />
                            </Trigger>
                            <Trigger
                                Property="HasItems"
                                Value="false">
                                <Setter
                                    Property="Visibility"
                                    TargetName="Expander"
                                    Value="Hidden" />
                            </Trigger>
                            <Trigger
                                Property="IsSelected"
                                Value="true">
                                <Setter
                                    Property="Background"
                                    TargetName="Bd"
                                    Value="{StaticResource BackgroundBlueBrush}" />
                                <Setter
                                    Property="BorderBrush"
                                    TargetName="Bd"
                                    Value="{StaticResource BackgroundBlueBrush}" />
                                <Setter
                                    Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition
                                        Property="IsSelected"
                                        Value="True" />
                                    <Condition
                                        Property="IsSelectionActive"
                                        Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter
                                    Property="Background"
                                    TargetName="Bd"
                                    Value="{StaticResource BackgroundBlueBrush}" />
                                <Setter
                                    Property="BorderBrush"
                                    TargetName="Bd"
                                    Value="{StaticResource BackgroundBlueBrush}" />
                                <Setter
                                    Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition
                                        Property="IsSelected"
                                        Value="True" />
                                    <Condition
                                        Property="IsSelectionActive"
                                        Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter
                                    Property="Background"
                                    TargetName="Bd"
                                    Value="{StaticResource BackgroundBlueBrush}" />
                                <Setter
                                    Property="BorderBrush"
                                    TargetName="Bd"
                                    Value="{StaticResource BackgroundBlueBrush}" />
                                <Setter
                                    Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            </MultiTrigger>
                            <Trigger
                                Property="IsEnabled"
                                Value="False">
                                <Setter
                                    Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                            <Trigger
                                Property="IsMouseOver"
                                SourceName="Bd"
                                Value="True">
                                <Setter
                                    Property="Background"
                                    TargetName="Bd"
                                    Value="{StaticResource BackgroundBrush1}" />
                                <Setter
                                    Property="BorderBrush"
                                    TargetName="Bd"
                                    Value="{StaticResource BackgroundBrush1}" />
                                <Setter
                                    Property="Foreground"
                                    Value="{StaticResource BackgroundBlueBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition
                Height="30" />
            <RowDefinition
                Height="405" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition
                Width="*" />
            <ColumnDefinition
                Width="41" />
            <ColumnDefinition
                Width="*" />
        </Grid.ColumnDefinitions>

        <Border>
            <TextBlock
                FontSize="14"
                Text="Filters" />
        </Border>

        <TreeView
            Grid.Row="1"
            Foreground="{StaticResource ForegroundBrush}"
            ItemsSource="{Binding FiltersCollectionView.Groups, Converter={StaticResource CollectionViewGroupConverter}}"
            Margin="0"
            FontSize="14">
            <i:Interaction.Triggers>
                <i:EventTrigger
                    EventName="MouseDoubleClick">
                    <i:InvokeCommandAction
                        Command="{Binding AddToSelectedFiltersCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <TreeView.Resources>
                <DataTemplate
                    x:Key="FilterTemplate">
                    <TextBlock
                        ToolTip="{Binding Name}"
                        Text="{Binding Name}" />
                </DataTemplate>
            </TreeView.Resources>

            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate
                    ItemsSource="{Binding Path=Items}"
                    ItemTemplate="{StaticResource FilterTemplate}">
                    <TextBlock
                        Text="{Binding Name}"
                        Margin="3,0,0,0" />
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>

        <Border
            Grid.Column="2">
            <TextBlock
                FontSize="14"
                Text="Selected filters" />
        </Border>

        <TreeView
            Grid.Row="1"
            Grid.Column="2"
            Foreground="{StaticResource ForegroundBrush}"
            ItemsSource="{Binding SelectedFiltersCollectionView.Groups, Converter={StaticResource CollectionViewGroupConverter}}"
            Margin="0"
            FontSize="14">
            <i:Interaction.Triggers>
                <i:EventTrigger
                    EventName="MouseDoubleClick">
                    <i:InvokeCommandAction
                        Command="{Binding RemoveFromSelectedFiltersCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <TreeView.Resources>
                <DataTemplate
                    x:Key="FilterTemplate">
                    <StackPanel
                        ToolTip="{Binding ToolTip}"
                        Orientation="Horizontal">
                        <TextBlock
                            Text="{Binding Name}" />
                        <TextBlock
                            Visibility="{Binding FilterValue, Converter={dh:NullToVisibilityConverter}}">                             
                            <Run
                                Text=" (" />                                                    
                            <Run
                                Text="{Binding FilterValue}" />                                                     
                            <Run
                                Text=")" />
                        </TextBlock>
                    </StackPanel>
                </DataTemplate>
            </TreeView.Resources>

            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate
                    ItemsSource="{Binding Path=Items}"
                    ItemTemplate="{StaticResource FilterTemplate}">
                    <TextBlock
                        Text="{Binding Name}"
                        Margin="3,0,0,0" />
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>

    </Grid>

    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger
            SourceObject="{Binding EnterValuePopupRequest, Mode=OneWay}">
            <infra:ShowRadWindowViewAction
                SingleOnly="True"
                IsModal="True"
                ViewName="{x:Static vw:RegionViewNames.FilterEditValuePopupView}"
                StartupLocation="CenterAssosiated">
                <infra:ShowRadWindowViewAction.WindowStyle>
                    <Style
                        TargetType="{x:Type telerik:RadWindow}">
                        <Setter
                            Property="Foreground"
                            Value="{StaticResource ForegroundBrush}" />
                        <Setter
                            Property="Background"
                            Value="{StaticResource BackgroundBrush1}" />
                        <Setter
                            Property="ResizeMode"
                            Value="NoResize" />
                        <Setter
                            Property="SnapsToDevicePixels"
                            Value="True" />
                        <Setter
                            Property="UseLayoutRounding"
                            Value="True" />
                        <Setter
                            Property="SizeToContent"
                            Value="True" />
                    </Style>
                </infra:ShowRadWindowViewAction.WindowStyle>
            </infra:ShowRadWindowViewAction>
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>

</UserControl>