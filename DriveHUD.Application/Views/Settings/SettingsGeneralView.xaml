<UserControl
    x:Class="DriveHUD.Application.Views.Settings.SettingsGeneralView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:DriveHUD.Application.Views.Settings"
    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
    xmlns:dh="http://www.acepokersolutions.com/winfx/2015/xaml/presentation"
    xmlns:vm="clr-namespace:DriveHUD.Application.ViewModels.Settings"
    xmlns:v="clr-namespace:DriveHUD.Application.Views.Settings"
    xmlns:global="clr-namespace:System.Globalization;assembly=mscorlib"
    xmlns:converter="clr-namespace:DriveHUD.Application.ValueConverters"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    mc:Ignorable="d"
    xmlns:prism="http://www.codeplex.com/prism"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:infra="clr-namespace:DriveHUD.Common.Wpf.Actions;assembly=DriveHUD.Common.Wpf"
    d:DesignHeight="650"
    d:DesignWidth="550">

    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger
            SourceObject="{Binding PopupModel.PopupViewModel.NotificationRequest, Mode=OneWay}">
            <infra:PopupTelerikWindowAction
                IsModal="True"
                WindowStyle="{StaticResource NotificationWindowStyle}"
                WindowContent="{StaticResource NotificationWindowContentTemplate}" />
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>

    <UserControl.Resources>
        <converter:ParameterToBoolConverter
            x:Key="ParameterToBoolConverter" />

        <SolidColorBrush
            x:Key="CloseButtonBackground"
            Color="#191a1e" />

        <DataTemplate
            DataType="{x:Type vm:SettingsSendLogViewModel}">
            <v:SettingsSendLogView />
        </DataTemplate>

        <Style
            x:Key="DayRadioButton"
            TargetType="RadioButton"
            BasedOn="{StaticResource RadioButtonStyle}">
            <Setter
                Property="Template">
                <Setter.Value>
                    <ControlTemplate
                        TargetType="RadioButton">
                        <Border
                            TextBlock.Foreground="{StaticResource ForegroundBrush}"
                            x:Name="Border"
                            CornerRadius="1"
                            BorderThickness="0"
                            Background="{StaticResource BackgroundBrush3}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup
                                    x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition
                                            GeneratedDuration="0:0:0.5" />
                                        <VisualTransition
                                            GeneratedDuration="0"
                                            To="Pressed" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState
                                        x:Name="Normal" />
                                    <VisualState
                                        x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames
                                                Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Border.Background).Color">
                                                <EasingColorKeyFrame
                                                    KeyTime="0"
                                                    Value="#34519c" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState
                                        x:Name="Checked">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames
                                                Storyboard.TargetProperty="(Border.Background).Color"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame
                                                    KeyTime="0"
                                                    Value="{StaticResource BackgroundBlueColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState
                                        x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames
                                                Storyboard.TargetProperty="(Border.Background).Color"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame
                                                    KeyTime="0"
                                                    Value="{StaticResource BackgroundBlueColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState
                                        x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames
                                                Storyboard.TargetProperty="(Border.Background).Color"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame
                                                    KeyTime="0"
                                                    Value="#FFAEA5A5" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter
                                Margin="2"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition
                Height="Auto" />
            <RowDefinition
                Height="Auto" />
            <RowDefinition
                Height="Auto" />
            <RowDefinition
                Height="Auto" />
            <RowDefinition
                Height="Auto" />
            <RowDefinition
                Height="Auto" />
        </Grid.RowDefinitions>

        <StackPanel
            Grid.Row="0">
            <CheckBox
                Style="{StaticResource CheckBoxRight}"
                HorizontalAlignment="Stretch"
                IsChecked="{Binding IsAutomaticallyDownloadUpdates, Mode=TwoWay}"
                Content="{ResX Key=Settings_Updates}"
                Margin="15 5" />
            <CheckBox
                Style="{StaticResource CheckBoxRight}"
                IsChecked="{Binding IsApplyFiltersToTournamentsAndCashGames, Mode=TwoWay}"
                Content="{ResX Key=Settings_ApplyFilters}"
                Margin="15 5" />
            <CheckBox
                Style="{StaticResource CheckBoxRight}"
                IsChecked="{Binding IsSaveFiltersOnExit, Mode=TwoWay}"
                Content="{ResX Key=Settings_SaveFilters}"
                Margin="15 5" />
            <CheckBox
                Style="{StaticResource CheckBoxRight}"
                IsChecked="{Binding RunSiteDetection, Mode=TwoWay}"
                Content="{ResX Key=Settings_RunSiteDetection}"
                Margin="15 5" />
            <CheckBox
                Style="{StaticResource CheckBoxRight}"
                IsChecked="{Binding IsTurnOnAdvancedLogging, Mode=TwoWay}"
                Content="{ResX Key=Settings_Logging}"
                Margin="15 5" />
        </StackPanel>

        <Button
            Grid.Row="1"
            Width="150"
            Height="30"
            Margin="15,15,15,5"
            HorizontalAlignment="Right"
            Content="{ResX Key=Settings_SendLog}"
            Command="{Binding SendLogsCommand}" />

        <StackPanel
            Grid.Row="2">
            <TextBlock
                Text="{ResX Key=Settings_TimeZoneHeader}"
                Style="{StaticResource Title_H1}"
                Foreground="{StaticResource ForegroundBrush}" />
            <Separator />
        </StackPanel>

        <Grid
            Grid.Row="3"
            Margin="0 10 0 0">
            <Grid.RowDefinitions>
                <RowDefinition
                    Height="Auto" />
                <RowDefinition
                    Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="*" />
                <ColumnDefinition
                    Width="*" />
            </Grid.ColumnDefinitions>

            <TextBlock
                Text="{ResX Key=Settings_TimeZoneOffset}"
                VerticalAlignment="Center"
                Style="{StaticResource Title_H2}"
                Foreground="{StaticResource ForegroundBrush}"
                Margin="15 5" />
            <telerik:RadNumericUpDown
                Grid.Row="0"
                Grid.Column="1"
                Minimum="-23"
                Maximum="23"
                ValueFormat="Numeric"
                Width="120"
                HorizontalAlignment="Right"
                Foreground="{StaticResource ForegroundBrush}"
                Margin="15 5"
                Value="{Binding TimeZoneOffset, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true, NotifyOnValidationError=true, Mode=TwoWay}">
                <telerik:RadNumericUpDown.NumberFormatInfo>
                    <global:NumberFormatInfo
                        NumberDecimalDigits="0" />
                </telerik:RadNumericUpDown.NumberFormatInfo>
            </telerik:RadNumericUpDown>

            <TextBlock
                Grid.Row="1"
                Grid.Column="0"
                Text="{ResX Key=Settings_StartOfWeekHeader}"
                Style="{StaticResource Title_H2}"
                Foreground="{StaticResource ForegroundBrush}"
                Margin="15 5" />

            <StackPanel
                Grid.Row="1"
                Grid.Column="1"
                Orientation="Horizontal"
                Margin="15 5"
                HorizontalAlignment="Right">
                <RadioButton
                    Height="30"
                    Width="90"
                    IsChecked="{Binding StartDayOfWeek, Mode=TwoWay, Converter={StaticResource ParameterToBoolConverter}, ConverterParameter={x:Static sys:DayOfWeek.Monday}}"
                    Content="{ResX Key=Settings_StartOfWeekMonday}"
                    Style="{StaticResource DayRadioButton}" />
                <RadioButton
                    Height="30"
                    Width="90"
                    IsChecked="{Binding StartDayOfWeek, Mode=TwoWay, Converter={StaticResource ParameterToBoolConverter}, ConverterParameter={x:Static sys:DayOfWeek.Sunday}}"
                    Content="{ResX Key=Settings_StartOfWeekSunday}"
                    Style="{StaticResource DayRadioButton}" />
            </StackPanel>
        </Grid>

        <StackPanel
            Grid.Row="4">
            <TextBlock
                Text="{ResX Key=Settings_ServiceCommands}"
                Style="{StaticResource Title_H1}"
                Foreground="{StaticResource ForegroundBrush}" />
            <Separator />
        </StackPanel>

        <Grid
            Grid.Row="5"
            Margin="0 10 0 0">

            <Grid.RowDefinitions>
                <RowDefinition
                    Height="Auto" />
                <RowDefinition
                    Height="5" />
                <RowDefinition
                    Height="Auto" />
                <RowDefinition
                    Height="5" />
                <RowDefinition
                    Height="Auto" />
                <RowDefinition
                    Height="5" />
                <RowDefinition
                    Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="*" />
                <ColumnDefinition
                    Width="*" />
            </Grid.ColumnDefinitions>

            <TextBlock
                Text="{ResX Key=Settings_RebuildTitle}"
                VerticalAlignment="Center"
                Style="{StaticResource Title_H2}"
                TextWrapping="Wrap"
                Foreground="{StaticResource ForegroundBrush}"
                Margin="15 5" />

            <Button
                Grid.Column="1"
                Width="100"
                Height="30"             
                HorizontalAlignment="Right"
                Content="{ResX Key=Settings_RebuildStats}"
                Command="{Binding RebuildStatsCommand}" />

            <TextBlock
                Grid.Row="2"
                Text="{ResX Key=Settings_RecoverTitle}"
                TextWrapping="Wrap"
                VerticalAlignment="Center"
                Style="{StaticResource Title_H2}"
                Foreground="{StaticResource ForegroundBrush}"
                Margin="15 5" />

            <Button
                Grid.Row="2"
                Grid.Column="1"
                Width="100"
                Height="30"              
                HorizontalAlignment="Right"
                Content="{ResX Key=Settings_RecoverStats}"
                Command="{Binding RecoverStatsCommand}" />

            <TextBlock
                Grid.Row="4"
                Text="{ResX Key=Settings_VacuumDatabaseTitle}"
                TextWrapping="Wrap"
                VerticalAlignment="Center"
                Style="{StaticResource Title_H2}"
                Foreground="{StaticResource ForegroundBrush}"
                Margin="15 5" />

            <Button
                Grid.Row="4"
                Grid.Column="1"
                Width="100"
                Height="30"
                HorizontalAlignment="Right"
                Content="{ResX Key=Settings_VacuumDatabase}"
                Command="{Binding VacuumDatabaseCommand}" />

            <CheckBox
                Grid.Row="6"
                Grid.ColumnSpan="2"
                Style="{StaticResource CheckBoxRight}"
                IsChecked="{Binding IsAPIEnabled, Mode=TwoWay}"
                Content="{ResX Key=Settings_IsAPIEnabled}"
                Margin="15 5" />

        </Grid>

        <dh:NonTopmostPopup
            IsOpen="{Binding PopupModel.IsPopupOpened}"
            AllowsTransparency="True"
            Placement="Center">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="Auto" />
                    <ColumnDefinition
                        Width="40" />
                </Grid.ColumnDefinitions>

                <Border
                    Grid.Column="0"
                    CornerRadius="4"
                    Background="#335199"
                    Height="10"
                    VerticalAlignment="Top" />

                <ContentControl
                    Content="{Binding PopupModel.PopupViewModel}"
                    Grid.Column="0"
                    Margin="0,5,0,0" />

                <Button
                    Grid.Column="1"
                    VerticalAlignment="Top"
                    Margin="0,5,0,0"
                    Width="40"
                    Height="40"
                    Command="{Binding Path=PopupModel.ClosePopupCommand}"
                    Background="{StaticResource CloseButtonBackground}">

                    <Path
                        SnapsToDevicePixels="True"
                        ToolTip="Close"
                        Width="11"
                        Height="11"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Stretch="Fill"
                        Fill="#FFFFFF"
                        Data="F1 M 26.9166,22.1667L 37.9999,33.25L 49.0832,22.1668L 53.8332,26.9168L 42.7499,38L 53.8332,49.0834L 49.0833,53.8334L 37.9999,42.75L 26.9166,53.8334L 22.1666,49.0833L 33.25,38L 22.1667,26.9167L 26.9166,22.1667 Z " />

                </Button>

            </Grid>
        </dh:NonTopmostPopup>

    </Grid>
</UserControl>