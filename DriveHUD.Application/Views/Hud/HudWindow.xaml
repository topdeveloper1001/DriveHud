<Window
    x:Class="DriveHUD.Application.Views.HudWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ctrl="clr-namespace:DriveHUD.Application.Controls"
    xmlns:dh="http://www.acepokersolutions.com/winfx/2015/xaml/presentation"
    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
    xmlns:enum="clr-namespace:DriveHUD.Entities;assembly=DriveHUD.Entities"
    xmlns:enum2="clr-namespace:Model.Enums;assembly=Model"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:prism="http://www.codeplex.com/prism"
    xmlns:infra="clr-namespace:DriveHUD.Common.Wpf.Actions;assembly=DriveHUD.Common.Wpf"
    xmlns:vm="clr-namespace:DriveHUD.Application.ViewModels.Hud"
    xmlns:valueConverters="clr-namespace:DriveHUD.Application.ValueConverters"
    xmlns:res="clr-namespace:DriveHUD.Common.Resources;assembly=DriveHUD.Common.Resources"
    ResizeMode="NoResize"
    WindowStyle="None"
    ShowInTaskbar="False"
    AllowsTransparency="True"
    Background="Transparent"
    HorizontalAlignment="Center"
    x:Name="hudWindow">

    <Window.Resources>
        <valueConverters:SelectedLayoutToCheckedConverter
            x:Key="SelectedLayoutToCheckedConverter" />
    </Window.Resources>
    <Window.DataContext>
        <vm:HudWindowViewModel />
    </Window.DataContext>

    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger
            SourceObject="{Binding NotificationRequest}">
            <infra:PopupTelerikWindowAction
                IsModal="False"
                WindowStyle="{StaticResource NotificationWindowStyle}"
                WindowContent="{StaticResource NotificationWindowContentTemplate}" />
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition
                Height="{Binding Source={x:Static res:HudDefaultSettings.HudIconHeaderHeight}}" />
            <RowDefinition
                Height="*" />
        </Grid.RowDefinitions>
        <Image
            Grid.Row="0"
            Source="/DriveHUD.Common.Resources;component/images/logo32x32.png"
            Stretch="Uniform"
            Width="32"
            Height="32"
            VerticalAlignment="Center"
            HorizontalAlignment="Center">
            <telerik:RadContextMenu.ContextMenu>
                <telerik:RadContextMenu
                    ItemClick="OnRadMenuItemClick">
                    <!-- Tag last hand -->
                    <telerik:RadMenuItem
                        Header="{ResX Main_ContextMenu_TagLastHand}">
                        <telerik:RadMenuItem
                            Header="{ResX Key=Enum_HandTag_ForReview}"
                            CommandParameter="{x:Static enum:EnumHandTag.ForReview}"
                            Command="{Binding TagHandCommand}" />
                        <telerik:RadMenuItem
                            Header="{ResX Key=Enum_HandTag_Bluff}"
                            CommandParameter="{x:Static enum:EnumHandTag.Bluff}"
                            Command="{Binding TagHandCommand}" />
                        <telerik:RadMenuItem
                            Header="{ResX Key=Enum_HandTag_HeroCall}"
                            CommandParameter="{x:Static enum:EnumHandTag.HeroCall}"
                            Command="{Binding TagHandCommand}" />
                        <telerik:RadMenuItem
                            Header="{ResX Key=Enum_HandTag_BigFold}"
                            CommandParameter="{x:Static enum:EnumHandTag.BigFold}"
                            Command="{Binding TagHandCommand}" />
                    </telerik:RadMenuItem>
                    <!-- Export last hand -->
                    <telerik:RadMenuItem
                        Header="{ResX Main_ContextMenu_ExportLastHand}">
                        <telerik:RadMenuItem
                            Header="{ResX Key=Enum_HandExport_TwoPlusTwo}"
                            CommandParameter="{x:Static enum2:EnumExportType.TwoPlusTwo}"
                            Command="{Binding ExportHandCommand}" />
                        <telerik:RadMenuItem
                            Header="{ResX Key=Enum_HandExport_CardsChat}"
                            CommandParameter="{x:Static enum2:EnumExportType.CardsChat}"
                            Command="{Binding ExportHandCommand}" />
                        <telerik:RadMenuItem
                            Header="{ResX Key=Enum_HandExport_PokerStrategy}"
                            CommandParameter="{x:Static enum2:EnumExportType.PokerStrategy}"
                            Command="{Binding ExportHandCommand}" />
                        <telerik:RadMenuItem
                            Header="{ResX Key=Enum_HandExport_ICMizer}"
                            CommandParameter="{x:Static enum2:EnumExportType.Raw}"
                            Visibility="{Binding GameType, Converter={dh:IsTournamentEnumGameTypeToVisibilityConverter}}"
                            Command="{Binding ExportHandCommand}" />
                        <telerik:RadMenuItem
                            Header="{ResX Key=Enum_HandExport_RawHandHistory}"
                            CommandParameter="{x:Static enum2:EnumExportType.Raw}"
                            Command="{Binding ExportHandCommand}" />
                        <telerik:RadMenuItem
                            Header="{ResX Key=Enum_HandExport_PlainTextHandHistory}"
                            CommandParameter="{x:Static enum2:EnumExportType.PlainText}"
                            Command="{Binding ExportHandCommand}" />
                    </telerik:RadMenuItem>
                    <!-- Replay last hand -->
                    <telerik:RadMenuItem
                        Header="{ResX Main_ContextMenu_ReplayLastHand}"
                        Command="{Binding ReplayLastHandCommand}" />
                    <!-- Save hud positions -->
                    <telerik:RadMenuItem
                        Header="{ResX Main_ContextMenu_SaveHudPosition}"
                        Click="SaveHudPositions_Click" />
                    <!-- Load HUD -->
                    <telerik:RadMenuItem
                        Header="{ResX Main_ContextMenu_LoadHud}"
                        ItemsSource="{Binding LayoutsCollection}">
                        <telerik:RadMenuItem.ItemContainerStyle>
                            <Style
                                TargetType="telerik:RadMenuItem"
                                BasedOn="{StaticResource {x:Type telerik:RadMenuItem}}">
                                <Setter
                                    Property="Header"
                                    Value="{Binding}" />
                                <Setter
                                    Property="IsCheckable"
                                    Value="True" />
                                <Setter
                                    Property="IsChecked">
                                    <Setter.Value>
                                        <MultiBinding
                                            Converter="{StaticResource SelectedLayoutToCheckedConverter}"
                                            Mode="OneWay">
                                            <Binding
                                                RelativeSource="{RelativeSource AncestorType={x:Type telerik:RadMenuItem}}"
                                                Path="DataContext.LayoutName" />
                                            <Binding
                                                Path="." />
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <Setter
                                    Property="Tag"
                                    Value="1" />
                                <Setter
                                    Property="Command"
                                    Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type telerik:RadMenuItem}}, Path=DataContext.LoadLayoutCommand}" />
                                <Setter
                                    Property="CommandParameter"
                                    Value="{Binding}" />
                            </Style>
                        </telerik:RadMenuItem.ItemContainerStyle>
                    </telerik:RadMenuItem>
                    <telerik:RadMenuItem
                        Header="{ResX Main_ContextMenu_ApplyPositions}"
                        ItemsSource="{Binding Seats}">
                        <telerik:RadMenuItem.ItemContainerStyle>
                            <Style
                                TargetType="telerik:RadMenuItem"
                                BasedOn="{StaticResource {x:Type telerik:RadMenuItem}}">
                                <Setter
                                    Property="Header">
                                    <Setter.Value>
                                        <ResX
                                            Key="Main_ContextMenu_ApplyPositionsAsSeat">
                                            <ResXParam
                                                Path="." />
                                        </ResX>
                                    </Setter.Value>
                                </Setter>
                                <Setter
                                    Property="Command"
                                    Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type telerik:RadMenuItem}}, Path=DataContext.ApplyPositionsCommand}" />
                                <Setter
                                    Property="CommandParameter"
                                    Value="{Binding}" />
                            </Style>
                        </telerik:RadMenuItem.ItemContainerStyle>
                    </telerik:RadMenuItem>
                </telerik:RadContextMenu>
            </telerik:RadContextMenu.ContextMenu>
        </Image>
        <Border
            Grid.Row="1"
            BorderThickness="0">
            <ctrl:HudDragCanvas
                x:Name="dgCanvas"
                AllowDragging="True"
                AllowDragOutOfView="True"
                AllowDrop="False" />
        </Border>
    </Grid>
</Window>