<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
                    xmlns:ts="clr-namespace:DriveHUD.Application.ControlTemplateSelectors"
                    xmlns:v="clr-namespace:DriveHUD.Application.Views"
                    xmlns:ctl="clr-namespace:DriveHUD.Application.Controls"
                    xmlns:vm="clr-namespace:DriveHUD.Application.ViewModels">
    <!-- FocusVisual -->

    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="2"
                     StrokeThickness="1"
                     Stroke="#60000000"
                     StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button Style-->
    <Style x:Key="ButtonStyle" BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
        <Setter Property="Height" Value="25"></Setter>
        <Setter Property="Width" Value="85"></Setter>
        <Setter Property="Background" Value="#84c940"></Setter>
        <Setter Property="FontSize" Value="13"></Setter>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <!-- Simple Button Style -->
    <Style x:Key="SimpleButtonStyle" TargetType="Button">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Margin" Value="3,0,3,0" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{StaticResource MouseOverForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Button Style-->
    <Style x:Key="ToggleButtonStyle" BasedOn="{StaticResource {x:Type Button}}" TargetType="ToggleButton">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Padding" Value="0"/>
    </Style>

    <Style x:Key="RadioButtonStyle" BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="RadioButton">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SnapsToDevicePixels"
          Value="true" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="FocusVisualStyle"
          Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="MinHeight"
          Value="23" />
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Background"
                Value="{StaticResource BackgroundBrush3}" />
        <Setter Property="MinWidth"
          Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border TextBlock.Foreground="{TemplateBinding Foreground}" Padding="{TemplateBinding Padding}"
                            x:Name="Border"
                            CornerRadius="1"
                            BorderThickness="0" 
                            Background ="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.5" />
                                    <VisualTransition GeneratedDuration="0"
                                  To="Pressed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                             Storyboard.TargetProperty="(Border.Background).Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="#34519c" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).Color"
                                                Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="#2c437f" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).Color"
                                                Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="#2c437f" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).Color"
                                                                      Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="#FFAEA5A5" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button -->
    <Style TargetType="Button">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="{StaticResource BackgroundBrush3}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="MinHeight" Value="23" />
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border 
                        x:Name="Border"
                        TextBlock.Foreground="{TemplateBinding Foreground}"                        
                        Padding="{TemplateBinding Padding}"
                        CornerRadius="2"
                        BorderThickness="0" 
                        Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.5" />
                                    <VisualTransition GeneratedDuration="0"
                                  To="Pressed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                             Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#34519c" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="#2c437f" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                      Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="#FFAEA5A5" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0"
                                     EndPoint="0,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="{StaticResource DefaultBorderBrushDarkColor}"
                                    Offset="1.0" />
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>

                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="StructTemplate">
        <Grid Margin="-4">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock 
                Text="{Binding DataContext.Player, RelativeSource={RelativeSource AncestorType=telerik:RadDiagramShape}}" 
                Grid.Row="0" HorizontalAlignment="Center" 
                VerticalAlignment="Center" 
                />
            <TextBlock 
                Text="{Binding DataContext.Bank, RelativeSource={RelativeSource AncestorType=telerik:RadDiagramShape}, StringFormat={}${0}}" 
                Grid.Row="1" 
                HorizontalAlignment="Center" 
                VerticalAlignment="Center" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="HudTemplate">
        <ctl:HudPanel DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=telerik:RadDiagramShape}}" />
    </DataTemplate>

    <DataTemplate x:Key="RichHudTemplate">
        <ctl:HudRichPanel DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=telerik:RadDiagramShape}}" />
    </DataTemplate>

    <ControlTemplate x:Key="PreferredSeatControlTemplate">
        <Border  Background="#242F41"
                 BorderBrush="#325398"
                 CornerRadius="2"
                 BorderThickness="2"
                 Visibility="{Binding DataContext.IsVisible, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay, RelativeSource={RelativeSource AncestorType=telerik:RadDiagramShape}}">
            <TextBlock Text="P" HorizontalAlignment="Center" VerticalAlignment="Center"
                       Foreground="White"
                       FontSize="18" FontWeight="Bold"/>
        </Border>
    </ControlTemplate>

    <ts:ClassTemplateSelector 
        x:Key="ClassTemplateSelector" 
        PlayerPlaceTemplate="{StaticResource StructTemplate}"                                                            
        HudPlaceTemplate="{StaticResource HudTemplate}" 
        RichHudTemplate="{StaticResource RichHudTemplate}"/>

    <Style x:Key="RadDiagramStyle" TargetType="telerik:RadDiagram" />

    <Style x:Key="ClassDiagramStyle" TargetType="telerik:RadDiagram" BasedOn="{StaticResource RadDiagramStyle}">
        <Setter Property="AllowCopy" Value="False" />
        <Setter Property="AllowCut" Value="False" />
        <Setter Property="AllowDelete" Value="False" />
        <Setter Property="AllowPaste" Value="False" />
        <Setter Property="IsConnectorsManipulationEnabled" Value="False" />
        <Setter Property="IsEditable" Value="False" />
        <Setter Property="IsBackgroundSurfaceVisible" Value="True" />
        <Setter Property="IsSnapToGridEnabled" Value="False" />
        <Setter Property="IsSnapToItemsEnabled" Value="False"/>
        <Setter Property="IsZoomEnabled" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="ShapeTemplateSelector" Value="{StaticResource ClassTemplateSelector}" />
    </Style>

</ResourceDictionary>