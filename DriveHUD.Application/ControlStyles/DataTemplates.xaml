<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dh="http://www.acepokersolutions.com/winfx/2015/xaml/presentation"
    xmlns:primitives="clr-namespace:Telerik.Windows.Controls.Diagrams.Primitives;assembly=Telerik.Windows.Controls.Diagrams"
    xmlns:controls="clr-namespace:DriveHUD.Application.Controls"
    xmlns:telerikPrimitives="clr-namespace:Telerik.Windows.Controls.Primitives;assembly=Telerik.Windows.Controls"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:c="clr-namespace:DriveHUD.Application.ValueConverters"
    xmlns:m="clr-namespace:Model.Enums;assembly=Model"
    xmlns:app="clr-namespace:DriveHUD.Application"
    xmlns:v="clr-namespace:DriveHUD.Application.Views"
    xmlns:vp="clr-namespace:DriveHUD.Application.Views.PopupContainers"
    xmlns:vm="clr-namespace:DriveHUD.Application.ViewModels"
    xmlns:hvm="clr-namespace:DriveHUD.Application.ViewModels.Hud"
    xmlns:markupext="clr-namespace:DriveHUD.Common.Wpf.MarkupExtensions;assembly=DriveHUD.Common.Wpf"
    xmlns:vmp="clr-namespace:DriveHUD.Application.ViewModels.PopupContainers">

    <c:StatTypeToVisibilityConverter
        x:Key="StatTypeToVisibilityConverter" />
    <c:ZeroNonZeroToVisibilityConverter
        x:Key="ZeroNonZeroToVisibilityConverter" />
    <c:TextToVisibilityConverter
        x:Key="TextToVisibilityConverter" />
    <c:BoolToTextConverter_OnOff
        x:Key="BoolToTextConverter_OnOff" />
    <c:BoolToggleConverter
        x:Key="BoolToggleConverter" />
    <c:ColorToBrushConverter
        x:Key="ColorToBrushConverter" />

    <DataTemplate
        x:Key="IconTemplate">
        <Image
            Height="25"
            Source="{markupext:IconExtension  /images/drivehud.ico, 32}"
            Stretch="Uniform" />
    </DataTemplate>

    <DataTemplate
        x:Key="ItemsControlItemTemplate_PopupSettings_StatInfoValueRange">

        <Grid
            HorizontalAlignment="Stretch"
            Margin="2"
            Background="Gray">
            <Grid.RowDefinitions>
                <RowDefinition
                    Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="80" />
                <ColumnDefinition
                    Width="170" />
            </Grid.ColumnDefinitions>

            <Grid.InputBindings>
                <MouseBinding
                    Gesture="LeftClick"
                    Command="{Binding Path=DataContext.AppearanceValueRangeSelectedItem_CommandClick, RelativeSource={RelativeSource AncestorType=vp:PopupContainerSettingsView}}"
                    CommandParameter="{Binding}" />
            </Grid.InputBindings>

            <Grid
                Grid.Row="0"
                Grid.Column="0"
                Margin="0">

                <StackPanel
                    Orientation="Vertical"
                    Visibility="{Binding Path=IsChecked, Converter={dh:BoolToVisibilityConverter}}">
                    <TextBlock
                        Margin="0,0,0,2"
                        HorizontalAlignment="Left"
                        Foreground="Black"
                        Text="{Binding Path=ValueRangeType}">
                    </TextBlock>
                    <TextBox
                        Margin="0"
                        HorizontalAlignment="Stretch"
                        Foreground="Black"
                        BorderBrush="Black"
                        Text="{Binding Path=Value, Mode=TwoWay}">
                    </TextBox>
                </StackPanel>

                <StackPanel
                    Orientation="Vertical"
                    Visibility="{Binding Path=IsChecked, Converter={dh:BoolToVisibilityConverter}, ConverterParameter=Inverse}">
                    <TextBlock
                        Margin="0,0,0,2"
                        HorizontalAlignment="Left"
                        Foreground="Black"
                        Text="N/A">
                    </TextBlock>
                    <TextBox
                        Margin="0"
                        HorizontalAlignment="Stretch"
                        Foreground="Black"
                        BorderBrush="Black"
                        Text="inf">
                    </TextBox>
                </StackPanel>

            </Grid>

            <Grid
                Grid.Row="0"
                Grid.Column="1"
                Grid.RowSpan="2"
                Margin="5,0,0,0"
                HorizontalAlignment="Stretch">

                <Grid.Triggers>
                    <EventTrigger
                        RoutedEvent="MouseLeftButtonDown">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <BooleanAnimationUsingKeyFrames
                                        Storyboard.TargetName="RadColorPicker_AppearanceStatInfoValueRangeColor"
                                        Storyboard.TargetProperty="IsDropDownOpen">
                                        <DiscreteBooleanKeyFrame
                                            KeyTime="0">
                                            <DiscreteBooleanKeyFrame.Value>
                                                <MultiBinding
                                                    Converter="{StaticResource BoolToggleConverter}">
                                                    <Binding
                                                        Path="IsDropDownOpen"
                                                        ElementName="RadColorPicker_AppearanceStatInfoValueRangeColor" />
                                                </MultiBinding>
                                            </DiscreteBooleanKeyFrame.Value>
                                        </DiscreteBooleanKeyFrame>
                                    </BooleanAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </Grid.Triggers>

                <telerik:RadColorPicker
                    x:Name="RadColorPicker_AppearanceStatInfoValueRangeColor"
                    Margin="5,0,0,0"
                    VerticalAlignment="Bottom"
                    HorizontalAlignment="Left"
                    SelectedColor="{Binding Path=DataContext.AppearanceValueRangeSelectedItem.Color, Mode=TwoWay, RelativeSource={RelativeSource AncestorType=vp:PopupContainerSettingsView}}">
                </telerik:RadColorPicker>

                <Border
                    HorizontalAlignment="Stretch"
                    Background="{Binding Path=Color, Converter={StaticResource ColorToBrushConverter}}"
                    Visibility="{Binding Path=IsChecked, Converter={dh:BoolToVisibilityConverter}}">
                </Border>

                <Border
                    HorizontalAlignment="Stretch"
                    Background="Gray"
                    Visibility="{Binding Path=IsChecked, Converter={dh:BoolToVisibilityConverter}, ConverterParameter=Inverse}">
                </Border>

                <CheckBox
                    Margin="0,5,10,0"
                    Width="15"
                    Height="15"
                    VerticalAlignment="Top"
                    HorizontalAlignment="Right"
                    Visibility="{Binding Path=IsEditable, Converter={dh:BoolToVisibilityConverter}}"
                    IsChecked="{Binding Path=IsChecked}">
                </CheckBox>

            </Grid>

        </Grid>

    </DataTemplate>

    <DataTemplate
        x:Key="RadListBoxItemTemplate_StatInfo">
        <Grid>
            <Grid
                Background="#1d1e20"
                Height="30"
                Visibility="{Binding Path=., Mode=OneWay,Converter={StaticResource StatTypeToVisibilityConverter},ConverterParameter=StatInfo}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="*" />
                    <ColumnDefinition
                        Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBlock
                    Grid.Column="0"
                    Margin="10 0 0 0"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Left"
                    Foreground="#4a4b4f"
                    Background="#1d1e20"
                    FontWeight="Bold"
                    FontSize="13"
                    Text="{Binding Caption}" />

            </Grid>
            <Grid
                Height="5"
                Background="#1d1e20"
                Visibility="{Binding Path=., Mode=OneWay, Converter={StaticResource StatTypeToVisibilityConverter}, ConverterParameter=StatInfoBreak}">
            </Grid>
        </Grid>
    </DataTemplate>

    <Style
        x:Key="LineBarRadioButtonStyle"
        TargetType="RadioButton">
        <Setter
            Property="Cursor"
            Value="Hand" />
        <Setter
            Property="ToolTip"
            Value="{ResX Key=Common_Hud_ShowLineBarTooltip}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type RadioButton}">
                    <Image
                        x:Name="Main"
                        Width="19"
                        Height="16"
                        Source="/DriveHUD.Common.Resources;Component/images/icons/gauge-small.png" />
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsChecked"
                            Value="True">
                            <Setter
                                Property="Opacity"
                                TargetName="Main"
                                Value="1" />
                        </Trigger>
                        <Trigger
                            Property="IsChecked"
                            Value="False">
                            <Setter
                                Property="Opacity"
                                TargetName="Main"
                                Value="0.25" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="SimpleStatRadioButtonStyle"
        TargetType="RadioButton">
        <Setter
            Property="Cursor"
            Value="Hand" />
        <Setter
            Property="ToolTip"
            Value="{ResX Key=Common_Hud_DoNotShowLineBarTooltip}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type RadioButton}">
                    <Image
                        x:Name="Main"
                        Width="20"
                        Height="19"
                        Source="/DriveHUD.Common.Resources;Component/images/icons/textbox-small.png" />
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsChecked"
                            Value="True">
                            <Setter
                                Property="Opacity"
                                TargetName="Main"
                                Value="1" />
                        </Trigger>
                        <Trigger
                            Property="IsChecked"
                            Value="False">
                            <Setter
                                Property="Opacity"
                                TargetName="Main"
                                Value="0.25" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate
        x:Key="RadListBoxItemTemplate_SelectedStatInfo">
        <Grid>
            <Grid
                Background="#1d1e20"
                Height="30"
                Visibility="{Binding Path=., Mode=OneWay,Converter={StaticResource StatTypeToVisibilityConverter},ConverterParameter=StatInfo}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="*" />
                    <ColumnDefinition
                        Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBlock
                    Grid.Column="0"
                    Margin="10 0 0 0"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Left"
                    Foreground="#4a4b4f"
                    Background="#1d1e20"
                    FontSize="13"
                    Text="{Binding Caption}" />

                <StackPanel
                    Orientation="Horizontal"
                    VerticalAlignment="Center"
                    Visibility="{Binding DataContext.LineBarOrSimpleStatSelectorVisible, Converter={dh:BoolToVisibilityConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"
                    Grid.Column="1">

                    <RadioButton
                        Style="{StaticResource LineBarRadioButtonStyle}"
                        IsChecked="{Binding IsPopupBarNotSupported, Converter={dh:BoolNotConverter}}" />

                    <RadioButton
                        Margin="5,0,7,0"
                        Style="{StaticResource SimpleStatRadioButtonStyle}"
                        IsChecked="{Binding IsPopupBarNotSupported}" />

                </StackPanel>

            </Grid>
            <Grid
                Height="5"
                Background="#1d1e20"
                Visibility="{Binding Path=., Mode=OneWay, Converter={StaticResource StatTypeToVisibilityConverter}, ConverterParameter=StatInfoBreak}">
            </Grid>
        </Grid>
    </DataTemplate>

</ResourceDictionary>